{"version":3,"sources":["webpack:///webpack/bootstrap 70377681025ab2e81879","webpack:///./resources/assets/js/admin.js","webpack:///./node_modules/trumbowyg/dist/trumbowyg.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0_trumbowyg__","$","trumbowyg","svgPath","click","e","preventDefault","toggleClass","tooltip","template","ajaxSetup","headers","X-CSRF-TOKEN","attr","order","direction","ajax","ajaxNoLoad","load","spin","unSpin","done","fail","buildParameters","getCheckboxValueByName","target","verb","url","errorAjax","type","that","prop","data","html","table","pagination","swal","title","role","valid","confirmed","new","active","val","empty","jQuery","langs","en","viewHTML","undo","redo","formatting","blockquote","code","header","bold","italic","strikethrough","underline","strong","em","del","superscript","subscript","unorderedList","orderedList","insertImage","link","createLink","unlink","justifyLeft","justifyCenter","justifyRight","justifyFull","horizontalRule","removeformat","fullscreen","close","submit","reset","required","description","text","width","plugins","hideButtonTexts","lang","fixedBtnPane","fixedFullWidth","autogrow","autogrowOnEnter","imageWidthModalEdit","prefix","semantic","resetCss","removeformatPasted","tagsToRemove","btns","btnsDef","inlineElementsSelector","pasteHandlers","urlProtocol","minimalLinks","writable","navigator","window","document","fn","options","params","this","each","Trumbowyg","length","t","execCmd","cmd","param","forceCss","openModal","content","closeModal","openModalInsert","fields","callback","saveRange","range","getRangeText","restoreRange","setDisabled","toggle","destroy","editorElem","$trumbowyg","doc","ownerDocument","$ta","$c","extend","svgPathOption","hasSvg","querySelector","location","href","split","scriptElements","getElementsByTagName","source","src","matches","match","substring","indexOf","console","warn","div","createElement","id","body","insertBefore","childNodes","async","contentType","dataType","crossDomain","beforeSend","complete","success","innerHTML","XMLSerializer","serializeToString","documentElement","h","isBlinkFunction","chrome","Intl","v8BreakIterator","class","isSupported","key","h1","h2","h3","h4","tag","dropdown","ico","defaultOptions","imgDblClickHandler","getDefaultImgDblClickHandler","urlPrefix","setupUrlPrefix","disabled","nodeName","btnName","btnDef","addBtnDef","eventNamespace","keys","tagToButton","tagHandlers","concat","isIE","userAgent","appVersion","init","DEFAULT_SEMANTIC_MAP","b","strike","height","initPlugins","execCommand","buildEditor","buildBtnPane","fixedBtnPaneEvents","buildOverlay","setTimeout","trigger","protocol","test","$box","isTextarea","is","$ed","insertAfter","append","syncCode","addClass","contenteditable","dir","_dir","tabindex","add","css","semanticCode","debounceButtonPaneStatus","ctrl","composition","on","ctrlKey","metaKey","altKey","String","fromCharCode","which","toUpperCase","updateEventName","keyCode","compositionEndIE","clearTimeout","updateButtonPaneStatus","$btnPane","removeClass","autogrowOnEnterDontClose","autogrowOnEnterWasFocused","autogrowEditorOnEnter","getSelection","deleteFromDocument","clipboardData","getData","selection","createRange","pasteHTML","getRangeAt","insertNode","createTextNode","originalEvent","pasteHandler","oldHeight","clientHeight","totalHeight","scrollHeight","btnGrp","isArray","$btnGroup","btn","isSupportedBtn","buildBtn","trim","prepend","isDropdown","hasIcon","textDef","$btn","replace","toLowerCase","mousedown","hasClass","dropdownPrefix","dropdownOptions","$dropdown","def","buildSubBtn","hide","style","$overlay","appendTo","showOverlay","fadeIn","hideOverlay","fadeOut","isFixed","scrollTop","offset","top","bp","oh","outerHeight","position","left","zIndex","marginTop","removeAttr","disable","after","show","off","destroyPlugins","remove","removeData","activeElement","blur","syncTextarea","find","force","safe","join","contents","totalheight","full","keepRange","semanticTag","blockElementsSelector","filter","nodeType","nodeValue","wrap","wrapInlinesInParagraphsFrom","$from","$finalParagraph","nextUntil","addBack","wrapAll","parent","$nextElement","nextAll","first","next","children","startContainer","not","unwrap","oldTag","copyAttributes","newTag","$oldTag","documentSelection","node","focusNode","cloneContents","parentNode","$a","selectNode","removeAllRanges","addRange","label","assign","v","prependUrlPrefix","deleteContents","isCollapsed","undefined","alt","$img","isFullscreen","fullscreenCssClass","skipTrumbowyg","focus","e2","$modal","one","$form","action","opacity","animate","prependTo","buildModalBtn","$modalBox","lg","fieldName","field","a","attributes","map","values","$field","addErrorOnModalField","pattern","patternError","err","$label","parseInt","rangeCount","rangeStart","savedRange","selectNodeContents","setEnd","startOffset","metaRange","start","end","charIndex","nodeStack","foundStart","stop","pop","nextCharIndex","setStart","cn","push","tags","getTagsRecursive","activeClasses","dropdownBtnName","element","tagName","textAlign","tagHandler","loadedPlugins","plugin","shouldInit"],"mappings":"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","file":"/js/admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 70377681025ab2e81879","import 'trumbowyg'\n\n$('.trumbowyg-form').trumbowyg({\n    svgPath: '/js/ui/icons.svg'\n})\n\n// Toggle the side navigation\n$(\"#sidenavToggler\").click(function(e) {\n    e.preventDefault()\n    $(\"body\").toggleClass(\"sidenav-toggled\")\n})\n\n// Configure tooltips for collapsed side navigation\n$('.navbar-sidenav [data-toggle=\"tooltip\"]').tooltip({\n    template: '<div class=\"tooltip navbar-sidenav-tooltip\" role=\"tooltip\"><div class=\"arrow\"></div><div class=\"tooltip-inner\"></div></div>'\n})\n\n$.ajaxSetup({\n    headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n})\n\nvar admin = (function () {\n\n    var order = 'created_at'\n    var direction = 'desc'\n\n    var pagination = function (event, that, errorAjax) {\n        event.preventDefault()\n        var href = that.attr('href')\n        if (href !== '#') {\n            spin()\n            load(href, errorAjax)\n        }\n    }\n\n    var destroy = function (event, that, url, swalTitle, confirmButtonText, cancelButtonText, errorAjax) {\n        event.preventDefault()\n        swal({\n            title: swalTitle,\n            type: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: '#DD6B55',\n            confirmButtonText: confirmButtonText,\n            cancelButtonText: cancelButtonText\n        }).then(function () {\n            ajax(that.attr('href'), 'DELETE', url, errorAjax)\n        })\n    }\n\n    var seen = function (url, that, errorAjax) {\n        var urlSeen = url + '/seen/' + that.val()\n        // If \"new\" is checked we must reload the page\n        if(getCheckboxValueByName('new')) {\n            ajax(urlSeen, 'PUT', url, errorAjax)\n        } else {\n            ajaxNoLoad(urlSeen, 'PUT', errorAjax, that)\n        }\n    }\n\n    var status = function (url, that, errorAjax) {\n        var urlActive = url + '/active/' + that.val()\n        if(that.is(':checked')) {\n            urlActive += '/1'\n        }\n        // If \"active\" is checked we must reload the page\n        if(getCheckboxValueByName('active')) {\n            ajax(urlActive, 'PUT', url, errorAjax)\n        } else {\n            ajaxNoLoad(urlActive, 'PUT', errorAjax)\n        }\n    }\n\n    var ordering = function (url, that, errorAjax) {\n        order = that.attr('id')\n        direction = that.hasClass('fa-sort') || that.hasClass('fa-sort-desc') ? 'asc' : 'desc'\n        // Reset selectors\n        $('th span').removeClass().addClass('fa fa-fw fa-sort pull-right')\n        // Adjust selected\n        that.removeClass().addClass('fa fa-fw fa-sort-' + direction + ' pull-right')\n        // Load page\n        load(url, errorAjax)\n    }\n\n    var filters = function (url, errorAjax) {\n        spin()\n        load(url, errorAjax)\n    }\n\n    var ajax = function (target, verb, url, errorAjax) {\n        spin()\n        $.ajax({\n            url: target,\n            type: verb\n        })\n            .done(function () {\n                load(url, errorAjax)\n            })\n            .fail(function () {\n                    fail(errorAjax)\n                }\n            )\n    }\n\n    var ajaxNoLoad = function (target, verb, errorAjax, that) {\n        spin()\n        $.ajax({\n            url: target,\n            type: verb\n        })\n            .done(function () {\n                unSpin()\n                that.prop('disabled', true)\n            })\n            .fail(function () {\n                fail(errorAjax)\n            })\n    }\n\n    var load = function (url, errorAjax) {\n        $.get(url, buildParameters())\n            .done(function (data) {\n                done(data)\n            })\n            .fail(function () {\n                    fail(errorAjax)\n                }\n            )\n    }\n\n    var spin = function () {\n        $('#spinner').html('<span class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></span>')\n    }\n\n    var unSpin = function () {\n        $('#spinner').empty()\n    }\n\n    var done = function (data) {\n        $('#pannel').html(data.table)\n        $('#pagination').html(data.pagination)\n        unSpin()\n    }\n\n    var fail = function (errorAjax) {\n        unSpin()\n        swal({\n            title: errorAjax,\n            type: 'warning'\n        })\n    }\n\n    var buildParameters = function () {\n        return {\n            role: getCheckboxValueByName('role'),\n            valid: getCheckboxValueByName('valid'),\n            confirmed: getCheckboxValueByName('confirmed'),\n            new: getCheckboxValueByName('new'),\n            active: getCheckboxValueByName('active'),\n            order: order,\n            direction: direction\n        }\n    }\n\n    var getCheckboxValueByName = function (name) {\n        return $(\".box-header input[name='\" + name + \"']:checked\").val()\n    }\n\n    return {\n        ajax: ajax,\n        destroy: destroy,\n        pagination: pagination,\n        seen: seen,\n        status: status,\n        ordering: ordering,\n        filters: filters,\n        spin: spin,\n        unSpin: unSpin\n    }\n\n})()\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/admin.js","/**\n * Trumbowyg v2.11.1 - A lightweight WYSIWYG editor\n * Trumbowyg core file\n * ------------------------\n * @link http://alex-d.github.io/Trumbowyg\n * @license MIT\n * @author Alexandre Demode (Alex-D)\n *         Twitter : @AlexandreDemode\n *         Website : alex-d.fr\n */\n\njQuery.trumbowyg = {\n    langs: {\n        en: {\n            viewHTML: 'View HTML',\n\n            undo: 'Undo',\n            redo: 'Redo',\n\n            formatting: 'Formatting',\n            p: 'Paragraph',\n            blockquote: 'Quote',\n            code: 'Code',\n            header: 'Header',\n\n            bold: 'Bold',\n            italic: 'Italic',\n            strikethrough: 'Stroke',\n            underline: 'Underline',\n\n            strong: 'Strong',\n            em: 'Emphasis',\n            del: 'Deleted',\n\n            superscript: 'Superscript',\n            subscript: 'Subscript',\n\n            unorderedList: 'Unordered list',\n            orderedList: 'Ordered list',\n\n            insertImage: 'Insert Image',\n            link: 'Link',\n            createLink: 'Insert link',\n            unlink: 'Remove link',\n\n            justifyLeft: 'Align Left',\n            justifyCenter: 'Align Center',\n            justifyRight: 'Align Right',\n            justifyFull: 'Align Justify',\n\n            horizontalRule: 'Insert horizontal rule',\n            removeformat: 'Remove format',\n\n            fullscreen: 'Fullscreen',\n\n            close: 'Close',\n\n            submit: 'Confirm',\n            reset: 'Cancel',\n\n            required: 'Required',\n            description: 'Description',\n            title: 'Title',\n            text: 'Text',\n            target: 'Target',\n            width: 'Width'\n        }\n    },\n\n    // Plugins\n    plugins: {},\n\n    // SVG Path globally\n    svgPath: null,\n\n    hideButtonTexts: null\n};\n\n// Makes default options read-only\nObject.defineProperty(jQuery.trumbowyg, 'defaultOptions', {\n    value: {\n        lang: 'en',\n\n        fixedBtnPane: false,\n        fixedFullWidth: false,\n        autogrow: false,\n        autogrowOnEnter: false,\n        imageWidthModalEdit: false,\n\n        prefix: 'trumbowyg-',\n\n        semantic: true,\n        resetCss: false,\n        removeformatPasted: false,\n        tagsToRemove: [],\n        btns: [\n            ['viewHTML'],\n            ['undo', 'redo'], // Only supported in Blink browsers\n            ['formatting'],\n            ['strong', 'em', 'del'],\n            ['superscript', 'subscript'],\n            ['link'],\n            ['insertImage'],\n            ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],\n            ['unorderedList', 'orderedList'],\n            ['horizontalRule'],\n            ['removeformat'],\n            ['fullscreen']\n        ],\n        // For custom button definitions\n        btnsDef: {},\n\n        inlineElementsSelector: 'a,abbr,acronym,b,caption,cite,code,col,dfn,dir,dt,dd,em,font,hr,i,kbd,li,q,span,strikeout,strong,sub,sup,u',\n\n        pasteHandlers: [],\n\n        // imgDblClickHandler: default is defined in constructor\n\n        plugins: {},\n        urlProtocol: false,\n        minimalLinks: false\n    },\n    writable: false,\n    enumerable: true,\n    configurable: false\n});\n\n\n(function (navigator, window, document, $) {\n    'use strict';\n\n    var CONFIRM_EVENT = 'tbwconfirm',\n        CANCEL_EVENT = 'tbwcancel';\n\n    $.fn.trumbowyg = function (options, params) {\n        var trumbowygDataName = 'trumbowyg';\n        if (options === Object(options) || !options) {\n            return this.each(function () {\n                if (!$(this).data(trumbowygDataName)) {\n                    $(this).data(trumbowygDataName, new Trumbowyg(this, options));\n                }\n            });\n        }\n        if (this.length === 1) {\n            try {\n                var t = $(this).data(trumbowygDataName);\n                switch (options) {\n                    // Exec command\n                    case 'execCmd':\n                        return t.execCmd(params.cmd, params.param, params.forceCss);\n\n                    // Modal box\n                    case 'openModal':\n                        return t.openModal(params.title, params.content);\n                    case 'closeModal':\n                        return t.closeModal();\n                    case 'openModalInsert':\n                        return t.openModalInsert(params.title, params.fields, params.callback);\n\n                    // Range\n                    case 'saveRange':\n                        return t.saveRange();\n                    case 'getRange':\n                        return t.range;\n                    case 'getRangeText':\n                        return t.getRangeText();\n                    case 'restoreRange':\n                        return t.restoreRange();\n\n                    // Enable/disable\n                    case 'enable':\n                        return t.setDisabled(false);\n                    case 'disable':\n                        return t.setDisabled(true);\n\n                    // Toggle\n                    case 'toggle':\n                        return t.toggle();\n\n                    // Destroy\n                    case 'destroy':\n                        return t.destroy();\n\n                    // Empty\n                    case 'empty':\n                        return t.empty();\n\n                    // HTML\n                    case 'html':\n                        return t.html(params);\n                }\n            } catch (c) {\n            }\n        }\n\n        return false;\n    };\n\n    // @param: editorElem is the DOM element\n    var Trumbowyg = function (editorElem, options) {\n        var t = this,\n            trumbowygIconsId = 'trumbowyg-icons',\n            $trumbowyg = $.trumbowyg;\n\n        // Get the document of the element. It use to makes the plugin\n        // compatible on iframes.\n        t.doc = editorElem.ownerDocument || document;\n\n        // jQuery object of the editor\n        t.$ta = $(editorElem); // $ta : Textarea\n        t.$c = $(editorElem); // $c : creator\n\n        options = options || {};\n\n        // Localization management\n        if (options.lang != null || $trumbowyg.langs[options.lang] != null) {\n            t.lang = $.extend(true, {}, $trumbowyg.langs.en, $trumbowyg.langs[options.lang]);\n        } else {\n            t.lang = $trumbowyg.langs.en;\n        }\n\n        t.hideButtonTexts = $trumbowyg.hideButtonTexts != null ? $trumbowyg.hideButtonTexts : options.hideButtonTexts;\n\n        // SVG path\n        var svgPathOption = $trumbowyg.svgPath != null ? $trumbowyg.svgPath : options.svgPath;\n        t.hasSvg = svgPathOption !== false;\n        t.svgPath = !!t.doc.querySelector('base') ? window.location.href.split('#')[0] : '';\n        if ($('#' + trumbowygIconsId, t.doc).length === 0 && svgPathOption !== false) {\n            if (svgPathOption == null) {\n                // Hack to get svgPathOption based on trumbowyg.js path\n                var scriptElements = document.getElementsByTagName('script');\n                for (var i = 0; i < scriptElements.length; i += 1) {\n                    var source = scriptElements[i].src;\n                    var matches = source.match('trumbowyg(\\.min)?\\.js');\n                    if (matches != null) {\n                        svgPathOption = source.substring(0, source.indexOf(matches[0])) + 'ui/icons.svg';\n                    }\n                }\n                if (svgPathOption == null) {\n                    console.warn('You must define svgPath: https://goo.gl/CfTY9U'); // jshint ignore:line\n                }\n            }\n\n            var div = t.doc.createElement('div');\n            div.id = trumbowygIconsId;\n            t.doc.body.insertBefore(div, t.doc.body.childNodes[0]);\n            $.ajax({\n                async: true,\n                type: 'GET',\n                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n                dataType: 'xml',\n                crossDomain: true,\n                url: svgPathOption,\n                data: null,\n                beforeSend: null,\n                complete: null,\n                success: function (data) {\n                    div.innerHTML = new XMLSerializer().serializeToString(data.documentElement);\n                }\n            });\n        }\n\n\n        /**\n         * When the button is associated to a empty object\n         * fn and title attributs are defined from the button key value\n         *\n         * For example\n         *      foo: {}\n         * is equivalent to :\n         *      foo: {\n         *          fn: 'foo',\n         *          title: this.lang.foo\n         *      }\n         */\n        var h = t.lang.header, // Header translation\n            isBlinkFunction = function () {\n                return (window.chrome || (window.Intl && Intl.v8BreakIterator)) && 'CSS' in window;\n            };\n        t.btnsDef = {\n            viewHTML: {\n                fn: 'toggle',\n                class: 'trumbowyg-not-disable',\n            },\n\n            undo: {\n                isSupported: isBlinkFunction,\n                key: 'Z'\n            },\n            redo: {\n                isSupported: isBlinkFunction,\n                key: 'Y'\n            },\n\n            p: {\n                fn: 'formatBlock'\n            },\n            blockquote: {\n                fn: 'formatBlock'\n            },\n            h1: {\n                fn: 'formatBlock',\n                title: h + ' 1'\n            },\n            h2: {\n                fn: 'formatBlock',\n                title: h + ' 2'\n            },\n            h3: {\n                fn: 'formatBlock',\n                title: h + ' 3'\n            },\n            h4: {\n                fn: 'formatBlock',\n                title: h + ' 4'\n            },\n            subscript: {\n                tag: 'sub'\n            },\n            superscript: {\n                tag: 'sup'\n            },\n\n            bold: {\n                key: 'B',\n                tag: 'b'\n            },\n            italic: {\n                key: 'I',\n                tag: 'i'\n            },\n            underline: {\n                tag: 'u'\n            },\n            strikethrough: {\n                tag: 'strike'\n            },\n\n            strong: {\n                fn: 'bold',\n                key: 'B'\n            },\n            em: {\n                fn: 'italic',\n                key: 'I'\n            },\n            del: {\n                fn: 'strikethrough'\n            },\n\n            createLink: {\n                key: 'K',\n                tag: 'a'\n            },\n            unlink: {},\n\n            insertImage: {},\n\n            justifyLeft: {\n                tag: 'left',\n                forceCss: true\n            },\n            justifyCenter: {\n                tag: 'center',\n                forceCss: true\n            },\n            justifyRight: {\n                tag: 'right',\n                forceCss: true\n            },\n            justifyFull: {\n                tag: 'justify',\n                forceCss: true\n            },\n\n            unorderedList: {\n                fn: 'insertUnorderedList',\n                tag: 'ul'\n            },\n            orderedList: {\n                fn: 'insertOrderedList',\n                tag: 'ol'\n            },\n\n            horizontalRule: {\n                fn: 'insertHorizontalRule'\n            },\n\n            removeformat: {},\n\n            fullscreen: {\n                class: 'trumbowyg-not-disable'\n            },\n            close: {\n                fn: 'destroy',\n                class: 'trumbowyg-not-disable'\n            },\n\n            // Dropdowns\n            formatting: {\n                dropdown: ['p', 'blockquote', 'h1', 'h2', 'h3', 'h4'],\n                ico: 'p'\n            },\n            link: {\n                dropdown: ['createLink', 'unlink']\n            }\n        };\n\n        // Defaults Options\n        t.o = $.extend(true, {}, $trumbowyg.defaultOptions, options);\n        if (!t.o.hasOwnProperty('imgDblClickHandler')) {\n            t.o.imgDblClickHandler = t.getDefaultImgDblClickHandler();\n        }\n\n        t.urlPrefix = t.setupUrlPrefix();\n\n        t.disabled = t.o.disabled || (editorElem.nodeName === 'TEXTAREA' && editorElem.disabled);\n\n        if (options.btns) {\n            t.o.btns = options.btns;\n        } else if (!t.o.semantic) {\n            t.o.btns[3] = ['bold', 'italic', 'underline', 'strikethrough'];\n        }\n\n        $.each(t.o.btnsDef, function (btnName, btnDef) {\n            t.addBtnDef(btnName, btnDef);\n        });\n\n        // put this here in the event it would be merged in with options\n        t.eventNamespace = 'trumbowyg-event';\n\n        // Keyboard shortcuts are load in this array\n        t.keys = [];\n\n        // Tag to button dynamically hydrated\n        t.tagToButton = {};\n        t.tagHandlers = [];\n\n        // Admit multiple paste handlers\n        t.pasteHandlers = [].concat(t.o.pasteHandlers);\n\n        // Check if browser is IE\n        t.isIE = (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') !== -1);\n\n        t.init();\n    };\n\n    Trumbowyg.prototype = {\n        DEFAULT_SEMANTIC_MAP: {\n            'b': 'strong',\n            'i': 'em',\n            's': 'del',\n            'strike': 'del',\n            'div': 'p'\n        },\n\n        init: function () {\n            var t = this;\n            t.height = t.$ta.height();\n\n            t.initPlugins();\n\n            try {\n                // Disable image resize, try-catch for old IE\n                t.doc.execCommand('enableObjectResizing', false, false);\n                t.doc.execCommand('defaultParagraphSeparator', false, 'p');\n            } catch (e) {\n            }\n\n            t.buildEditor();\n            t.buildBtnPane();\n\n            t.fixedBtnPaneEvents();\n\n            t.buildOverlay();\n\n            setTimeout(function () {\n                if (t.disabled) {\n                    t.setDisabled(true);\n                }\n                t.$c.trigger('tbwinit');\n            });\n        },\n\n        addBtnDef: function (btnName, btnDef) {\n            this.btnsDef[btnName] = btnDef;\n        },\n\n        setupUrlPrefix: function () {\n            var protocol = this.o.urlProtocol;\n            if (!protocol) {\n                return;\n            }\n\n            if (typeof(protocol) !== 'string') {\n                return 'https://';\n            }\n            return /:\\/\\/$/.test(protocol) ? protocol : protocol + '://';\n        },\n\n        buildEditor: function () {\n            var t = this,\n                prefix = t.o.prefix,\n                html = '';\n\n            t.$box = $('<div/>', {\n                class: prefix + 'box ' + prefix + 'editor-visible ' + prefix + t.o.lang + ' trumbowyg'\n            });\n\n            // $ta = Textarea\n            // $ed = Editor\n            t.isTextarea = t.$ta.is('textarea');\n            if (t.isTextarea) {\n                html = t.$ta.val();\n                t.$ed = $('<div/>');\n                t.$box\n                    .insertAfter(t.$ta)\n                    .append(t.$ed, t.$ta);\n            } else {\n                t.$ed = t.$ta;\n                html = t.$ed.html();\n\n                t.$ta = $('<textarea/>', {\n                    name: t.$ta.attr('id'),\n                    height: t.height\n                }).val(html);\n\n                t.$box\n                    .insertAfter(t.$ed)\n                    .append(t.$ta, t.$ed);\n                t.syncCode();\n            }\n\n            t.$ta\n                .addClass(prefix + 'textarea')\n                .attr('tabindex', -1)\n            ;\n\n            t.$ed\n                .addClass(prefix + 'editor')\n                .attr({\n                    contenteditable: true,\n                    dir: t.lang._dir || 'ltr'\n                })\n                .html(html)\n            ;\n\n            if (t.o.tabindex) {\n                t.$ed.attr('tabindex', t.o.tabindex);\n            }\n\n            if (t.$c.is('[placeholder]')) {\n                t.$ed.attr('placeholder', t.$c.attr('placeholder'));\n            }\n\n            if (t.$c.is('[spellcheck]')) {\n                t.$ed.attr('spellcheck', t.$c.attr('spellcheck'));\n            }\n\n            if (t.o.resetCss) {\n                t.$ed.addClass(prefix + 'reset-css');\n            }\n\n            if (!t.o.autogrow) {\n                t.$ta.add(t.$ed).css({\n                    height: t.height\n                });\n            }\n\n            t.semanticCode();\n\n            if (t.o.autogrowOnEnter) {\n                t.$ed.addClass(prefix + 'autogrow-on-enter');\n            }\n\n            var ctrl = false,\n                composition = false,\n                debounceButtonPaneStatus,\n                updateEventName = 'keyup';\n\n            t.$ed\n                .on('dblclick', 'img', t.o.imgDblClickHandler)\n                .on('keydown', function (e) {\n                    if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                        ctrl = true;\n                        var key = t.keys[String.fromCharCode(e.which).toUpperCase()];\n\n                        try {\n                            t.execCmd(key.fn, key.param);\n                            return false;\n                        } catch (c) {\n                        }\n                    }\n                })\n                .on('compositionstart compositionupdate', function () {\n                    composition = true;\n                })\n                .on(updateEventName + ' compositionend', function (e) {\n                    if (e.type === 'compositionend') {\n                        composition = false;\n                    } else if (composition) {\n                        return;\n                    }\n\n                    var keyCode = e.which;\n\n                    if (keyCode >= 37 && keyCode <= 40) {\n                        return;\n                    }\n\n                    if ((e.ctrlKey || e.metaKey) && (keyCode === 89 || keyCode === 90)) {\n                        t.$c.trigger('tbwchange');\n                    } else if (!ctrl && keyCode !== 17) {\n                        var compositionEndIE = t.isIE ? e.type === 'compositionend' : true;\n                        t.semanticCode(false, compositionEndIE && keyCode === 13);\n                        t.$c.trigger('tbwchange');\n                    } else if (typeof e.which === 'undefined') {\n                        t.semanticCode(false, false, true);\n                    }\n\n                    setTimeout(function () {\n                        ctrl = false;\n                    }, 50);\n                })\n                .on('mouseup keydown keyup', function (e) {\n                    if ((!e.ctrlKey && !e.metaKey) || e.altKey) {\n                        setTimeout(function () { // \"hold on\" to the ctrl key for 50ms\n                            ctrl = false;\n                        }, 50);\n                    }\n                    clearTimeout(debounceButtonPaneStatus);\n                    debounceButtonPaneStatus = setTimeout(function () {\n                        t.updateButtonPaneStatus();\n                    }, 50);\n                })\n                .on('focus blur', function (e) {\n                    t.$c.trigger('tbw' + e.type);\n                    if (e.type === 'blur') {\n                        $('.' + prefix + 'active-button', t.$btnPane).removeClass(prefix + 'active-button ' + prefix + 'active');\n                    }\n                    if (t.o.autogrowOnEnter) {\n                        if (t.autogrowOnEnterDontClose) {\n                            return;\n                        }\n                        if (e.type === 'focus') {\n                            t.autogrowOnEnterWasFocused = true;\n                            t.autogrowEditorOnEnter();\n                        }\n                        else if (!t.o.autogrow) {\n                            t.$ed.css({height: t.$ed.css('min-height')});\n                            t.$c.trigger('tbwresize');\n                        }\n                    }\n                })\n                .on('cut', function () {\n                    setTimeout(function () {\n                        t.semanticCode(false, true);\n                        t.$c.trigger('tbwchange');\n                    }, 0);\n                })\n                .on('paste', function (e) {\n                    if (t.o.removeformatPasted) {\n                        e.preventDefault();\n\n                        if (window.getSelection && window.getSelection().deleteFromDocument) {\n                            window.getSelection().deleteFromDocument();\n                        }\n\n                        try {\n                            // IE\n                            var text = window.clipboardData.getData('Text');\n\n                            try {\n                                // <= IE10\n                                t.doc.selection.createRange().pasteHTML(text);\n                            } catch (c) {\n                                // IE 11\n                                t.doc.getSelection().getRangeAt(0).insertNode(t.doc.createTextNode(text));\n                            }\n                            t.$c.trigger('tbwchange', e);\n                        } catch (d) {\n                            // Not IE\n                            t.execCmd('insertText', (e.originalEvent || e).clipboardData.getData('text/plain'));\n                        }\n                    }\n\n                    // Call pasteHandlers\n                    $.each(t.pasteHandlers, function (i, pasteHandler) {\n                        pasteHandler(e);\n                    });\n\n                    setTimeout(function () {\n                        t.semanticCode(false, true);\n                        t.$c.trigger('tbwpaste', e);\n                    }, 0);\n                });\n\n            t.$ta\n                .on('keyup', function () {\n                    t.$c.trigger('tbwchange');\n                })\n                .on('paste', function () {\n                    setTimeout(function () {\n                        t.$c.trigger('tbwchange');\n                    }, 0);\n                });\n\n            t.$box.on('keydown', function (e) {\n                if (e.which === 27 && $('.' + prefix + 'modal-box', t.$box).length === 1) {\n                    t.closeModal();\n                    return false;\n                }\n            });\n        },\n\n        //autogrow when entering logic\n        autogrowEditorOnEnter: function () {\n            var t = this;\n            t.$ed.removeClass('autogrow-on-enter');\n            var oldHeight = t.$ed[0].clientHeight;\n            t.$ed.height('auto');\n            var totalHeight = t.$ed[0].scrollHeight;\n            t.$ed.addClass('autogrow-on-enter');\n            if (oldHeight !== totalHeight) {\n                t.$ed.height(oldHeight);\n                setTimeout(function () {\n                    t.$ed.css({height: totalHeight});\n                    t.$c.trigger('tbwresize');\n                }, 0);\n            }\n        },\n\n\n        // Build button pane, use o.btns option\n        buildBtnPane: function () {\n            var t = this,\n                prefix = t.o.prefix;\n\n            var $btnPane = t.$btnPane = $('<div/>', {\n                class: prefix + 'button-pane'\n            });\n\n            $.each(t.o.btns, function (i, btnGrp) {\n                if (!$.isArray(btnGrp)) {\n                    btnGrp = [btnGrp];\n                }\n\n                var $btnGroup = $('<div/>', {\n                    class: prefix + 'button-group ' + ((btnGrp.indexOf('fullscreen') >= 0) ? prefix + 'right' : '')\n                });\n                $.each(btnGrp, function (i, btn) {\n                    try { // Prevent buildBtn error\n                        if (t.isSupportedBtn(btn)) { // It's a supported button\n                            $btnGroup.append(t.buildBtn(btn));\n                        }\n                    } catch (c) {\n                    }\n                });\n\n                if ($btnGroup.html().trim().length > 0) {\n                    $btnPane.append($btnGroup);\n                }\n            });\n\n            t.$box.prepend($btnPane);\n        },\n\n\n        // Build a button and his action\n        buildBtn: function (btnName) { // btnName is name of the button\n            var t = this,\n                prefix = t.o.prefix,\n                btn = t.btnsDef[btnName],\n                isDropdown = btn.dropdown,\n                hasIcon = btn.hasIcon != null ? btn.hasIcon : true,\n                textDef = t.lang[btnName] || btnName,\n\n                $btn = $('<button/>', {\n                    type: 'button',\n                    class: prefix + btnName + '-button ' + (btn.class || '') + (!hasIcon ? ' ' + prefix + 'textual-button' : ''),\n                    html: t.hasSvg && hasIcon ?\n                        '<svg><use xlink:href=\"' + t.svgPath + '#' + prefix + (btn.ico || btnName).replace(/([A-Z]+)/g, '-$1').toLowerCase() + '\"/></svg>' :\n                        t.hideButtonTexts ? '' : (btn.text || btn.title || t.lang[btnName] || btnName),\n                    title: (btn.title || btn.text || textDef) + ((btn.key) ? ' (Ctrl + ' + btn.key + ')' : ''),\n                    tabindex: -1,\n                    mousedown: function () {\n                        if (!isDropdown || $('.' + btnName + '-' + prefix + 'dropdown', t.$box).is(':hidden')) {\n                            $('body', t.doc).trigger('mousedown');\n                        }\n\n                        if ((t.$btnPane.hasClass(prefix + 'disable') || t.$box.hasClass(prefix + 'disabled')) &&\n                            !$(this).hasClass(prefix + 'active') &&\n                            !$(this).hasClass(prefix + 'not-disable')) {\n                            return false;\n                        }\n\n                        t.execCmd((isDropdown ? 'dropdown' : false) || btn.fn || btnName, btn.param || btnName, btn.forceCss);\n\n                        return false;\n                    }\n                });\n\n            if (isDropdown) {\n                $btn.addClass(prefix + 'open-dropdown');\n                var dropdownPrefix = prefix + 'dropdown',\n                    dropdownOptions = { // the dropdown\n                        class: dropdownPrefix + '-' + btnName + ' ' + dropdownPrefix + ' ' + prefix + 'fixed-top'\n                    };\n                dropdownOptions['data-' + dropdownPrefix] = btnName;\n                var $dropdown = $('<div/>', dropdownOptions);\n                $.each(isDropdown, function (i, def) {\n                    if (t.btnsDef[def] && t.isSupportedBtn(def)) {\n                        $dropdown.append(t.buildSubBtn(def));\n                    }\n                });\n                t.$box.append($dropdown.hide());\n            } else if (btn.key) {\n                t.keys[btn.key] = {\n                    fn: btn.fn || btnName,\n                    param: btn.param || btnName\n                };\n            }\n\n            if (!isDropdown) {\n                t.tagToButton[(btn.tag || btnName).toLowerCase()] = btnName;\n            }\n\n            return $btn;\n        },\n        // Build a button for dropdown menu\n        // @param n : name of the subbutton\n        buildSubBtn: function (btnName) {\n            var t = this,\n                prefix = t.o.prefix,\n                btn = t.btnsDef[btnName],\n                hasIcon = btn.hasIcon != null ? btn.hasIcon : true;\n\n            if (btn.key) {\n                t.keys[btn.key] = {\n                    fn: btn.fn || btnName,\n                    param: btn.param || btnName\n                };\n            }\n\n            t.tagToButton[(btn.tag || btnName).toLowerCase()] = btnName;\n\n            return $('<button/>', {\n                type: 'button',\n                class: prefix + btnName + '-dropdown-button' + (btn.ico ? ' ' + prefix + btn.ico + '-button' : ''),\n                html: t.hasSvg && hasIcon ? '<svg><use xlink:href=\"' + t.svgPath + '#' + prefix + (btn.ico || btnName).replace(/([A-Z]+)/g, '-$1').toLowerCase() + '\"/></svg>' + (btn.text || btn.title || t.lang[btnName] || btnName) : (btn.text || btn.title || t.lang[btnName] || btnName),\n                title: ((btn.key) ? ' (Ctrl + ' + btn.key + ')' : null),\n                style: btn.style || null,\n                mousedown: function () {\n                    $('body', t.doc).trigger('mousedown');\n\n                    t.execCmd(btn.fn || btnName, btn.param || btnName, btn.forceCss);\n\n                    return false;\n                }\n            });\n        },\n        // Check if button is supported\n        isSupportedBtn: function (b) {\n            try {\n                return this.btnsDef[b].isSupported();\n            } catch (c) {\n            }\n            return true;\n        },\n\n        // Build overlay for modal box\n        buildOverlay: function () {\n            var t = this;\n            t.$overlay = $('<div/>', {\n                class: t.o.prefix + 'overlay'\n            }).appendTo(t.$box);\n            return t.$overlay;\n        },\n        showOverlay: function () {\n            var t = this;\n            $(window).trigger('scroll');\n            t.$overlay.fadeIn(200);\n            t.$box.addClass(t.o.prefix + 'box-blur');\n        },\n        hideOverlay: function () {\n            var t = this;\n            t.$overlay.fadeOut(50);\n            t.$box.removeClass(t.o.prefix + 'box-blur');\n        },\n\n        // Management of fixed button pane\n        fixedBtnPaneEvents: function () {\n            var t = this,\n                fixedFullWidth = t.o.fixedFullWidth,\n                $box = t.$box;\n\n            if (!t.o.fixedBtnPane) {\n                return;\n            }\n\n            t.isFixed = false;\n\n            $(window)\n                .on('scroll.' + t.eventNamespace + ' resize.' + t.eventNamespace, function () {\n                    if (!$box) {\n                        return;\n                    }\n\n                    t.syncCode();\n\n                    var scrollTop = $(window).scrollTop(),\n                        offset = $box.offset().top + 1,\n                        bp = t.$btnPane,\n                        oh = bp.outerHeight() - 2;\n\n                    if ((scrollTop - offset > 0) && ((scrollTop - offset - t.height) < 0)) {\n                        if (!t.isFixed) {\n                            t.isFixed = true;\n                            bp.css({\n                                position: 'fixed',\n                                top: 0,\n                                left: fixedFullWidth ? '0' : 'auto',\n                                zIndex: 7\n                            });\n                            $([t.$ta, t.$ed]).css({marginTop: bp.height()});\n                        }\n                        bp.css({\n                            width: fixedFullWidth ? '100%' : (($box.width() - 1) + 'px')\n                        });\n\n                        $('.' + t.o.prefix + 'fixed-top', $box).css({\n                            position: fixedFullWidth ? 'fixed' : 'absolute',\n                            top: fixedFullWidth ? oh : oh + (scrollTop - offset) + 'px',\n                            zIndex: 15\n                        });\n                    } else if (t.isFixed) {\n                        t.isFixed = false;\n                        bp.removeAttr('style');\n                        $([t.$ta, t.$ed]).css({marginTop: 0});\n                        $('.' + t.o.prefix + 'fixed-top', $box).css({\n                            position: 'absolute',\n                            top: oh\n                        });\n                    }\n                });\n        },\n\n        // Disable editor\n        setDisabled: function (disable) {\n            var t = this,\n                prefix = t.o.prefix;\n\n            t.disabled = disable;\n\n            if (disable) {\n                t.$ta.attr('disabled', true);\n            } else {\n                t.$ta.removeAttr('disabled');\n            }\n            t.$box.toggleClass(prefix + 'disabled', disable);\n            t.$ed.attr('contenteditable', !disable);\n        },\n\n        // Destroy the editor\n        destroy: function () {\n            var t = this,\n                prefix = t.o.prefix;\n\n            if (t.isTextarea) {\n                t.$box.after(\n                    t.$ta\n                        .css({height: ''})\n                        .val(t.html())\n                        .removeClass(prefix + 'textarea')\n                        .show()\n                );\n            } else {\n                t.$box.after(\n                    t.$ed\n                        .css({height: ''})\n                        .removeClass(prefix + 'editor')\n                        .removeAttr('contenteditable')\n                        .removeAttr('dir')\n                        .html(t.html())\n                        .show()\n                );\n            }\n\n            t.$ed.off('dblclick', 'img');\n\n            t.destroyPlugins();\n\n            t.$box.remove();\n            t.$c.removeData('trumbowyg');\n            $('body').removeClass(prefix + 'body-fullscreen');\n            t.$c.trigger('tbwclose');\n            $(window).off('scroll.' + t.eventNamespace + ' resize.' + t.eventNamespace);\n        },\n\n\n        // Empty the editor\n        empty: function () {\n            this.$ta.val('');\n            this.syncCode(true);\n        },\n\n\n        // Function call when click on viewHTML button\n        toggle: function () {\n            var t = this,\n                prefix = t.o.prefix;\n\n            if (t.o.autogrowOnEnter) {\n                t.autogrowOnEnterDontClose = !t.$box.hasClass(prefix + 'editor-hidden');\n            }\n\n            t.semanticCode(false, true);\n\n            setTimeout(function () {\n                t.doc.activeElement.blur();\n                t.$box.toggleClass(prefix + 'editor-hidden ' + prefix + 'editor-visible');\n                t.$btnPane.toggleClass(prefix + 'disable');\n                $('.' + prefix + 'viewHTML-button', t.$btnPane).toggleClass(prefix + 'active');\n                if (t.$box.hasClass(prefix + 'editor-visible')) {\n                    t.$ta.attr('tabindex', -1);\n                } else {\n                    t.$ta.removeAttr('tabindex');\n                }\n\n                if (t.o.autogrowOnEnter && !t.autogrowOnEnterDontClose) {\n                    t.autogrowEditorOnEnter();\n                }\n            }, 0);\n        },\n\n        // Open dropdown when click on a button which open that\n        dropdown: function (name) {\n            var t = this,\n                d = t.doc,\n                prefix = t.o.prefix,\n                $dropdown = $('[data-' + prefix + 'dropdown=' + name + ']', t.$box),\n                $btn = $('.' + prefix + name + '-button', t.$btnPane),\n                show = $dropdown.is(':hidden');\n\n            $('body', d).trigger('mousedown');\n\n            if (show) {\n                var o = $btn.offset().left;\n                $btn.addClass(prefix + 'active');\n\n                $dropdown.css({\n                    position: 'absolute',\n                    top: $btn.offset().top - t.$btnPane.offset().top + $btn.outerHeight(),\n                    left: (t.o.fixedFullWidth && t.isFixed) ? o + 'px' : (o - t.$btnPane.offset().left) + 'px'\n                }).show();\n\n                $(window).trigger('scroll');\n\n                $('body', d).on('mousedown.' + t.eventNamespace, function (e) {\n                    if (!$dropdown.is(e.target)) {\n                        $('.' + prefix + 'dropdown', t.$box).hide();\n                        $('.' + prefix + 'active', t.$btnPane).removeClass(prefix + 'active');\n                        $('body', d).off('mousedown.' + t.eventNamespace);\n                    }\n                });\n            }\n        },\n\n\n        // HTML Code management\n        html: function (html) {\n            var t = this;\n\n            if (html != null) {\n                t.$ta.val(html);\n                t.syncCode(true);\n                t.$c.trigger('tbwchange');\n                return t;\n            }\n\n            return t.$ta.val();\n        },\n        syncTextarea: function () {\n            var t = this;\n            t.$ta.val(t.$ed.text().trim().length > 0 || t.$ed.find('hr,img,embed,iframe,input').length > 0 ? t.$ed.html() : '');\n        },\n        syncCode: function (force) {\n            var t = this;\n            if (!force && t.$ed.is(':visible')) {\n                t.syncTextarea();\n            } else {\n                // wrap the content in a div it's easier to get the innerhtml\n                var html = $('<div>').html(t.$ta.val());\n                //scrub the html before loading into the doc\n                var safe = $('<div>').append(html);\n                $(t.o.tagsToRemove.join(','), safe).remove();\n                t.$ed.html(safe.contents().html());\n            }\n\n            if (t.o.autogrow) {\n                t.height = t.$ed.height();\n                if (t.height !== t.$ta.css('height')) {\n                    t.$ta.css({height: t.height});\n                    t.$c.trigger('tbwresize');\n                }\n            }\n            if (t.o.autogrowOnEnter) {\n                // t.autogrowEditorOnEnter();\n                t.$ed.height('auto');\n                var totalheight = t.autogrowOnEnterWasFocused ? t.$ed[0].scrollHeight : t.$ed.css('min-height');\n                if (totalheight !== t.$ta.css('height')) {\n                    t.$ed.css({height: totalheight});\n                    t.$c.trigger('tbwresize');\n                }\n            }\n        },\n\n        // Analyse and update to semantic code\n        // @param force : force to sync code from textarea\n        // @param full  : wrap text nodes in <p>\n        // @param keepRange  : leave selection range as it is\n        semanticCode: function (force, full, keepRange) {\n            var t = this;\n            t.saveRange();\n            t.syncCode(force);\n\n            if (t.o.semantic) {\n                t.semanticTag('b');\n                t.semanticTag('i');\n                t.semanticTag('s');\n                t.semanticTag('strike');\n\n                if (full) {\n                    var inlineElementsSelector = t.o.inlineElementsSelector,\n                        blockElementsSelector = ':not(' + inlineElementsSelector + ')';\n\n                    // Wrap text nodes in span for easier processing\n                    t.$ed.contents().filter(function () {\n                        return this.nodeType === 3 && this.nodeValue.trim().length > 0;\n                    }).wrap('<span data-tbw/>');\n\n                    // Wrap groups of inline elements in paragraphs (recursive)\n                    var wrapInlinesInParagraphsFrom = function ($from) {\n                        if ($from.length !== 0) {\n                            var $finalParagraph = $from.nextUntil(blockElementsSelector).addBack().wrapAll('<p/>').parent(),\n                                $nextElement = $finalParagraph.nextAll(inlineElementsSelector).first();\n                            $finalParagraph.next('br').remove();\n                            wrapInlinesInParagraphsFrom($nextElement);\n                        }\n                    };\n                    wrapInlinesInParagraphsFrom(t.$ed.children(inlineElementsSelector).first());\n\n                    t.semanticTag('div', true);\n\n                    // Unwrap paragraphs content, containing nothing usefull\n                    t.$ed.find('p').filter(function () {\n                        // Don't remove currently being edited element\n                        if (t.range && this === t.range.startContainer) {\n                            return false;\n                        }\n                        return $(this).text().trim().length === 0 && $(this).children().not('br,span').length === 0;\n                    }).contents().unwrap();\n\n                    // Get rid of temporial span's\n                    $('[data-tbw]', t.$ed).contents().unwrap();\n\n                    // Remove empty <p>\n                    t.$ed.find('p:empty').remove();\n                }\n\n                if (!keepRange) {\n                    t.restoreRange();\n                }\n\n                t.syncTextarea();\n            }\n        },\n\n        semanticTag: function (oldTag, copyAttributes) {\n            var newTag;\n\n            if (this.o.semantic != null && typeof this.o.semantic === 'object' && this.o.semantic.hasOwnProperty(oldTag)) {\n                newTag = this.o.semantic[oldTag];\n            } else if (this.o.semantic === true && this.DEFAULT_SEMANTIC_MAP.hasOwnProperty(oldTag)) {\n                newTag = this.DEFAULT_SEMANTIC_MAP[oldTag];\n            } else {\n                return;\n            }\n\n            $(oldTag, this.$ed).each(function () {\n                var $oldTag = $(this);\n                $oldTag.wrap('<' + newTag + '/>');\n                if (copyAttributes) {\n                    $.each($oldTag.prop('attributes'), function () {\n                        $oldTag.parent().attr(this.name, this.value);\n                    });\n                }\n                $oldTag.contents().unwrap();\n            });\n        },\n\n        // Function call when user click on \"Insert Link\"\n        createLink: function () {\n            var t = this,\n                documentSelection = t.doc.getSelection(),\n                node = documentSelection.focusNode,\n                text = new XMLSerializer().serializeToString(documentSelection.getRangeAt(0).cloneContents()),\n                url,\n                title,\n                target;\n\n            while (['A', 'DIV'].indexOf(node.nodeName) < 0) {\n                node = node.parentNode;\n            }\n\n            if (node && node.nodeName === 'A') {\n                var $a = $(node);\n                text = $a.text();\n                url = $a.attr('href');\n                if (!t.o.minimalLinks) {\n                    title = $a.attr('title');\n                    target = $a.attr('target');\n                }\n                var range = t.doc.createRange();\n                range.selectNode(node);\n                documentSelection.removeAllRanges();\n                documentSelection.addRange(range);\n            }\n\n            t.saveRange();\n\n            var options = {\n                url: {\n                    label: 'URL',\n                    required: true,\n                    value: url\n                },\n                text: {\n                    label: t.lang.text,\n                    value: text\n                }\n            };\n            if (!t.o.minimalLinks) {\n                Object.assign(options, {\n                    title: {\n                        label: t.lang.title,\n                        value: title\n                    },\n                    target: {\n                        label: t.lang.target,\n                        value: target\n                    }\n                });\n            }\n\n            t.openModalInsert(t.lang.createLink, options, function (v) { // v is value\n                var url = t.prependUrlPrefix(v.url);\n                if (!url.length) {\n                    return false;\n                }\n\n                var link = $(['<a href=\"', url, '\">', v.text || v.url, '</a>'].join(''));\n\n                if (!t.o.minimalLinks) {\n                    if (v.title.length > 0) {\n                        link.attr('title', v.title);\n                    }\n                    if (v.target.length > 0) {\n                        link.attr('target', v.target);\n                    }\n                }\n                t.range.deleteContents();\n                t.range.insertNode(link[0]);\n                t.syncCode();\n                t.$c.trigger('tbwchange');\n                return true;\n            });\n        },\n        prependUrlPrefix: function (url) {\n            var t = this;\n            if (!t.urlPrefix) {\n                return url;\n            }\n\n            var VALID_LINK_PREFIX = /^([a-z][-+.a-z0-9]*:|\\/|#)/i;\n            if (VALID_LINK_PREFIX.test(url)) {\n                return url;\n            }\n\n            var SIMPLE_EMAIL_REGEX = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n            if (SIMPLE_EMAIL_REGEX.test(url)) {\n                return 'mailto:' + url;\n            }\n\n            return t.urlPrefix + url;\n        },\n        unlink: function () {\n            var t = this,\n                documentSelection = t.doc.getSelection(),\n                node = documentSelection.focusNode;\n\n            if (documentSelection.isCollapsed) {\n                while (['A', 'DIV'].indexOf(node.nodeName) < 0) {\n                    node = node.parentNode;\n                }\n\n                if (node && node.nodeName === 'A') {\n                    var range = t.doc.createRange();\n                    range.selectNode(node);\n                    documentSelection.removeAllRanges();\n                    documentSelection.addRange(range);\n                }\n            }\n            t.execCmd('unlink', undefined, undefined, true);\n        },\n        insertImage: function () {\n            var t = this;\n            t.saveRange();\n\n            var options = {\n                url: {\n                    label: 'URL',\n                    required: true\n                },\n                alt: {\n                    label: t.lang.description,\n                    value: t.getRangeText()\n                }\n            };\n\n            if (t.o.imageWidthModalEdit) {\n                options.width = {};\n            }\n\n            t.openModalInsert(t.lang.insertImage, options, function (v) { // v are values\n                t.execCmd('insertImage', v.url);\n                var $img = $('img[src=\"' + v.url + '\"]:not([alt])', t.$box);\n                $img.attr('alt', v.alt);\n\n                if (t.o.imageWidthModalEdit) {\n                    $img.attr({\n                        width: v.width\n                    });\n                }\n\n                t.syncCode();\n                t.$c.trigger('tbwchange');\n\n                return true;\n            });\n        },\n        fullscreen: function () {\n            var t = this,\n                prefix = t.o.prefix,\n                fullscreenCssClass = prefix + 'fullscreen',\n                isFullscreen;\n\n            t.$box.toggleClass(fullscreenCssClass);\n            isFullscreen = t.$box.hasClass(fullscreenCssClass);\n            $('body').toggleClass(prefix + 'body-fullscreen', isFullscreen);\n            $(window).trigger('scroll');\n            t.$c.trigger('tbw' + (isFullscreen ? 'open' : 'close') + 'fullscreen');\n        },\n\n\n        /*\n         * Call method of trumbowyg if exist\n         * else try to call anonymous function\n         * and finaly native execCommand\n         */\n        execCmd: function (cmd, param, forceCss, skipTrumbowyg) {\n            var t = this;\n            skipTrumbowyg = !!skipTrumbowyg || '';\n\n            if (cmd !== 'dropdown') {\n                t.$ed.focus();\n            }\n\n            try {\n                t.doc.execCommand('styleWithCSS', false, forceCss || false);\n            } catch (c) {\n            }\n\n            try {\n                t[cmd + skipTrumbowyg](param);\n            } catch (c) {\n                try {\n                    cmd(param);\n                } catch (e2) {\n                    if (cmd === 'insertHorizontalRule') {\n                        param = undefined;\n                    } else if (cmd === 'formatBlock' && t.isIE) {\n                        param = '<' + param + '>';\n                    }\n\n                    t.doc.execCommand(cmd, false, param);\n\n                    t.syncCode();\n                    t.semanticCode(false, true);\n                }\n\n                if (cmd !== 'dropdown') {\n                    t.updateButtonPaneStatus();\n                    t.$c.trigger('tbwchange');\n                }\n            }\n        },\n\n\n        // Open a modal box\n        openModal: function (title, content) {\n            var t = this,\n                prefix = t.o.prefix;\n\n            // No open a modal box when exist other modal box\n            if ($('.' + prefix + 'modal-box', t.$box).length > 0) {\n                return false;\n            }\n            if (t.o.autogrowOnEnter) {\n                t.autogrowOnEnterDontClose = true;\n            }\n\n            t.saveRange();\n            t.showOverlay();\n\n            // Disable all btnPane btns\n            t.$btnPane.addClass(prefix + 'disable');\n\n            // Build out of ModalBox, it's the mask for animations\n            var $modal = $('<div/>', {\n                class: prefix + 'modal ' + prefix + 'fixed-top'\n            }).css({\n                top: t.$box.offset().top + t.$btnPane.height(),\n                zIndex: 99999\n            }).appendTo($(document.body));\n\n            // Click on overlay close modal by cancelling them\n            t.$overlay.one('click', function () {\n                $modal.trigger(CANCEL_EVENT);\n                return false;\n            });\n\n            // Build the form\n            var $form = $('<form/>', {\n                action: '',\n                html: content\n            })\n                .on('submit', function () {\n                    $modal.trigger(CONFIRM_EVENT);\n                    return false;\n                })\n                .on('reset', function () {\n                    $modal.trigger(CANCEL_EVENT);\n                    return false;\n                })\n                .on('submit reset', function () {\n                    if (t.o.autogrowOnEnter) {\n                        t.autogrowOnEnterDontClose = false;\n                    }\n                });\n\n\n            // Build ModalBox and animate to show them\n            var $box = $('<div/>', {\n                class: prefix + 'modal-box',\n                html: $form\n            })\n                .css({\n                    top: '-' + t.$btnPane.outerHeight() + 'px',\n                    opacity: 0\n                })\n                .appendTo($modal)\n                .animate({\n                    top: 0,\n                    opacity: 1\n                }, 100);\n\n\n            // Append title\n            $('<span/>', {\n                text: title,\n                class: prefix + 'modal-title'\n            }).prependTo($box);\n\n            $modal.height($box.outerHeight() + 10);\n\n\n            // Focus in modal box\n            $('input:first', $box).focus();\n\n\n            // Append Confirm and Cancel buttons\n            t.buildModalBtn('submit', $box);\n            t.buildModalBtn('reset', $box);\n\n\n            $(window).trigger('scroll');\n\n            return $modal;\n        },\n        // @param n is name of modal\n        buildModalBtn: function (n, $modal) {\n            var t = this,\n                prefix = t.o.prefix;\n\n            return $('<button/>', {\n                class: prefix + 'modal-button ' + prefix + 'modal-' + n,\n                type: n,\n                text: t.lang[n] || n\n            }).appendTo($('form', $modal));\n        },\n        // close current modal box\n        closeModal: function () {\n            var t = this,\n                prefix = t.o.prefix;\n\n            t.$btnPane.removeClass(prefix + 'disable');\n            t.$overlay.off();\n\n            // Find the modal box\n            var $modalBox = $('.' + prefix + 'modal-box', $(document.body));\n\n            $modalBox.animate({\n                top: '-' + $modalBox.height()\n            }, 100, function () {\n                $modalBox.parent().remove();\n                t.hideOverlay();\n            });\n\n            t.restoreRange();\n        },\n        // Preformated build and management modal\n        openModalInsert: function (title, fields, cmd) {\n            var t = this,\n                prefix = t.o.prefix,\n                lg = t.lang,\n                html = '';\n\n            $.each(fields, function (fieldName, field) {\n                var l = field.label || fieldName,\n                    n = field.name || fieldName,\n                    a = field.attributes || {};\n\n                var attr = Object.keys(a).map(function (prop) {\n                    return prop + '=\"' + a[prop] + '\"';\n                }).join(' ');\n\n                html += '<label><input type=\"' + (field.type || 'text') + '\" name=\"' + n + '\"' +\n                    (field.type === 'checkbox' && field.value ? ' checked=\"checked\"' : ' value=\"' + (field.value || '').replace(/\"/g, '&quot;')) +\n                    '\"' + attr + '><span class=\"' + prefix + 'input-infos\"><span>' +\n                    (lg[l] ? lg[l] : l) +\n                    '</span></span></label>';\n            });\n\n            return t.openModal(title, html)\n                .on(CONFIRM_EVENT, function () {\n                    var $form = $('form', $(this)),\n                        valid = true,\n                        values = {};\n\n                    $.each(fields, function (fieldName, field) {\n                        var n = field.name || fieldName;\n\n                        var $field = $('input[name=\"' + n + '\"]', $form),\n                            inputType = $field.attr('type');\n\n                        switch (inputType.toLowerCase()) {\n                            case 'checkbox':\n                                values[n] = $field.is(':checked');\n                                break;\n                            case 'radio':\n                                values[n] = $field.filter(':checked').val();\n                                break;\n                            default:\n                                values[n] = $.trim($field.val());\n                                break;\n                        }\n                        // Validate value\n                        if (field.required && values[n] === '') {\n                            valid = false;\n                            t.addErrorOnModalField($field, t.lang.required);\n                        } else if (field.pattern && !field.pattern.test(values[n])) {\n                            valid = false;\n                            t.addErrorOnModalField($field, field.patternError);\n                        }\n                    });\n\n                    if (valid) {\n                        t.restoreRange();\n\n                        if (cmd(values, fields)) {\n                            t.syncCode();\n                            t.$c.trigger('tbwchange');\n                            t.closeModal();\n                            $(this).off(CONFIRM_EVENT);\n                        }\n                    }\n                })\n                .one(CANCEL_EVENT, function () {\n                    $(this).off(CONFIRM_EVENT);\n                    t.closeModal();\n                });\n        },\n        addErrorOnModalField: function ($field, err) {\n            var prefix = this.o.prefix,\n                $label = $field.parent();\n\n            $field\n                .on('change keyup', function () {\n                    $label.removeClass(prefix + 'input-error');\n                });\n\n            $label\n                .addClass(prefix + 'input-error')\n                .find('input+span')\n                .append(\n                    $('<span/>', {\n                        class: prefix + 'msg-error',\n                        text: err\n                    })\n                );\n        },\n\n        getDefaultImgDblClickHandler: function () {\n            var t = this;\n\n            return function () {\n                var $img = $(this),\n                    src = $img.attr('src'),\n                    base64 = '(Base64)';\n\n                if (src.indexOf('data:image') === 0) {\n                    src = base64;\n                }\n\n                var options = {\n                    url: {\n                        label: 'URL',\n                        value: src,\n                        required: true\n                    },\n                    alt: {\n                        label: t.lang.description,\n                        value: $img.attr('alt')\n                    }\n                };\n\n                if (t.o.imageWidthModalEdit) {\n                    options.width = {\n                        value: $img.attr('width') ? $img.attr('width') : ''\n                    };\n                }\n\n                t.openModalInsert(t.lang.insertImage, options, function (v) {\n                    if (v.url !== base64) {\n                        $img.attr({\n                            src: v.url\n                        });\n                    }\n                    $img.attr({\n                        alt: v.alt\n                    });\n\n                    if (t.o.imageWidthModalEdit) {\n                        if (parseInt(v.width) > 0) {\n                            $img.attr({\n                                width: v.width\n                            });\n                        } else {\n                            $img.removeAttr('width');\n                        }\n                    }\n\n                    return true;\n                });\n                return false;\n            };\n        },\n\n        // Range management\n        saveRange: function () {\n            var t = this,\n                documentSelection = t.doc.getSelection();\n\n            t.range = null;\n\n            if (documentSelection.rangeCount) {\n                var savedRange = t.range = documentSelection.getRangeAt(0),\n                    range = t.doc.createRange(),\n                    rangeStart;\n                range.selectNodeContents(t.$ed[0]);\n                range.setEnd(savedRange.startContainer, savedRange.startOffset);\n                rangeStart = (range + '').length;\n                t.metaRange = {\n                    start: rangeStart,\n                    end: rangeStart + (savedRange + '').length\n                };\n            }\n        },\n        restoreRange: function () {\n            var t = this,\n                metaRange = t.metaRange,\n                savedRange = t.range,\n                documentSelection = t.doc.getSelection(),\n                range;\n\n            if (!savedRange) {\n                return;\n            }\n\n            if (metaRange && metaRange.start !== metaRange.end) { // Algorithm from http://jsfiddle.net/WeWy7/3/\n                var charIndex = 0,\n                    nodeStack = [t.$ed[0]],\n                    node,\n                    foundStart = false,\n                    stop = false;\n\n                range = t.doc.createRange();\n\n                while (!stop && (node = nodeStack.pop())) {\n                    if (node.nodeType === 3) {\n                        var nextCharIndex = charIndex + node.length;\n                        if (!foundStart && metaRange.start >= charIndex && metaRange.start <= nextCharIndex) {\n                            range.setStart(node, metaRange.start - charIndex);\n                            foundStart = true;\n                        }\n                        if (foundStart && metaRange.end >= charIndex && metaRange.end <= nextCharIndex) {\n                            range.setEnd(node, metaRange.end - charIndex);\n                            stop = true;\n                        }\n                        charIndex = nextCharIndex;\n                    } else {\n                        var cn = node.childNodes,\n                            i = cn.length;\n\n                        while (i > 0) {\n                            i -= 1;\n                            nodeStack.push(cn[i]);\n                        }\n                    }\n                }\n            }\n\n            documentSelection.removeAllRanges();\n            documentSelection.addRange(range || savedRange);\n        },\n        getRangeText: function () {\n            return this.range + '';\n        },\n\n        updateButtonPaneStatus: function () {\n            var t = this,\n                prefix = t.o.prefix,\n                tags = t.getTagsRecursive(t.doc.getSelection().focusNode),\n                activeClasses = prefix + 'active-button ' + prefix + 'active';\n\n            $('.' + prefix + 'active-button', t.$btnPane).removeClass(activeClasses);\n            $.each(tags, function (i, tag) {\n                var btnName = t.tagToButton[tag.toLowerCase()],\n                    $btn = $('.' + prefix + btnName + '-button', t.$btnPane);\n\n                if ($btn.length > 0) {\n                    $btn.addClass(activeClasses);\n                } else {\n                    try {\n                        $btn = $('.' + prefix + 'dropdown .' + prefix + btnName + '-dropdown-button', t.$box);\n                        var dropdownBtnName = $btn.parent().data('dropdown');\n                        $('.' + prefix + dropdownBtnName + '-button', t.$box).addClass(activeClasses);\n                    } catch (e) {\n                    }\n                }\n            });\n        },\n        getTagsRecursive: function (element, tags) {\n            var t = this;\n            tags = tags || (element && element.tagName ? [element.tagName] : []);\n\n            if (element && element.parentNode) {\n                element = element.parentNode;\n            } else {\n                return tags;\n            }\n\n            var tag = element.tagName;\n            if (tag === 'DIV') {\n                return tags;\n            }\n            if (tag === 'P' && element.style.textAlign !== '') {\n                tags.push(element.style.textAlign);\n            }\n\n            $.each(t.tagHandlers, function (i, tagHandler) {\n                tags = tags.concat(tagHandler(element, t));\n            });\n\n            tags.push(tag);\n\n            return t.getTagsRecursive(element, tags).filter(function (tag) {\n                return tag != null;\n            });\n        },\n\n        // Plugins\n        initPlugins: function () {\n            var t = this;\n            t.loadedPlugins = [];\n            $.each($.trumbowyg.plugins, function (name, plugin) {\n                if (!plugin.shouldInit || plugin.shouldInit(t)) {\n                    plugin.init(t);\n                    if (plugin.tagHandler) {\n                        t.tagHandlers.push(plugin.tagHandler);\n                    }\n                    t.loadedPlugins.push(plugin);\n                }\n            });\n        },\n        destroyPlugins: function () {\n            $.each(this.loadedPlugins, function (i, plugin) {\n                if (plugin.destroy) {\n                    plugin.destroy();\n                }\n            });\n        }\n    };\n})(navigator, window, document, jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trumbowyg/dist/trumbowyg.js\n// module id = wc9L\n// module chunks = 1"],"sourceRoot":""}