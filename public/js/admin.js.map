{"version":3,"sources":["webpack:///webpack/bootstrap 0abdaec33c076b5d8cde","webpack:///./resources/assets/js/admin.js","webpack:///./node_modules/trumbowyg/dist/trumbowyg.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0_trumbowyg__","$","trumbowyg","svgPath","click","e","preventDefault","toggleClass","tooltip","template","jQuery","langs","en","viewHTML","undo","redo","formatting","blockquote","code","header","bold","italic","strikethrough","underline","strong","em","del","superscript","subscript","unorderedList","orderedList","insertImage","link","createLink","unlink","justifyLeft","justifyCenter","justifyRight","justifyFull","horizontalRule","removeformat","fullscreen","close","submit","reset","required","description","title","text","target","width","plugins","hideButtonTexts","lang","fixedBtnPane","fixedFullWidth","autogrow","autogrowOnEnter","imageWidthModalEdit","prefix","semantic","resetCss","removeformatPasted","tagsToRemove","btns","btnsDef","inlineElementsSelector","pasteHandlers","urlProtocol","minimalLinks","writable","navigator","window","document","fn","options","params","this","each","data","Trumbowyg","length","t","execCmd","cmd","param","forceCss","openModal","content","closeModal","openModalInsert","fields","callback","saveRange","range","getRangeText","restoreRange","setDisabled","toggle","destroy","empty","html","editorElem","$trumbowyg","doc","ownerDocument","$ta","$c","extend","svgPathOption","hasSvg","querySelector","location","href","split","scriptElements","getElementsByTagName","source","src","matches","match","substring","indexOf","console","warn","div","createElement","id","body","insertBefore","childNodes","ajax","async","type","contentType","dataType","crossDomain","url","beforeSend","complete","success","innerHTML","XMLSerializer","serializeToString","documentElement","h","isBlinkFunction","chrome","Intl","v8BreakIterator","class","isSupported","key","h1","h2","h3","h4","tag","dropdown","ico","defaultOptions","imgDblClickHandler","getDefaultImgDblClickHandler","urlPrefix","setupUrlPrefix","disabled","nodeName","btnName","btnDef","addBtnDef","eventNamespace","keys","tagToButton","tagHandlers","concat","isIE","userAgent","appVersion","init","DEFAULT_SEMANTIC_MAP","b","strike","height","initPlugins","execCommand","buildEditor","buildBtnPane","fixedBtnPaneEvents","buildOverlay","setTimeout","trigger","protocol","test","$box","isTextarea","is","val","$ed","insertAfter","append","attr","syncCode","addClass","contenteditable","dir","_dir","tabindex","add","css","semanticCode","debounceButtonPaneStatus","ctrl","composition","on","ctrlKey","metaKey","altKey","String","fromCharCode","which","toUpperCase","updateEventName","keyCode","compositionEndIE","clearTimeout","updateButtonPaneStatus","$btnPane","removeClass","autogrowOnEnterDontClose","autogrowOnEnterWasFocused","autogrowEditorOnEnter","getSelection","deleteFromDocument","clipboardData","getData","selection","createRange","pasteHTML","getRangeAt","insertNode","createTextNode","originalEvent","pasteHandler","oldHeight","clientHeight","totalHeight","scrollHeight","btnGrp","isArray","$btnGroup","btn","isSupportedBtn","buildBtn","trim","prepend","isDropdown","hasIcon","textDef","$btn","replace","toLowerCase","mousedown","hasClass","dropdownPrefix","dropdownOptions","$dropdown","def","buildSubBtn","hide","style","$overlay","appendTo","showOverlay","fadeIn","hideOverlay","fadeOut","isFixed","scrollTop","offset","top","bp","oh","outerHeight","position","left","zIndex","marginTop","removeAttr","disable","after","show","off","destroyPlugins","remove","removeData","activeElement","blur","syncTextarea","find","force","safe","join","contents","totalheight","full","keepRange","semanticTag","blockElementsSelector","filter","nodeType","nodeValue","wrap","wrapInlinesInParagraphsFrom","$from","$finalParagraph","nextUntil","addBack","wrapAll","parent","$nextElement","nextAll","first","next","children","startContainer","not","unwrap","oldTag","copyAttributes","newTag","$oldTag","prop","documentSelection","node","focusNode","cloneContents","parentNode","$a","selectNode","removeAllRanges","addRange","label","assign","v","prependUrlPrefix","deleteContents","isCollapsed","undefined","alt","$img","isFullscreen","fullscreenCssClass","skipTrumbowyg","focus","e2","$modal","one","$form","action","opacity","animate","prependTo","buildModalBtn","$modalBox","lg","fieldName","field","a","attributes","map","valid","values","$field","addErrorOnModalField","pattern","patternError","err","$label","parseInt","rangeCount","rangeStart","savedRange","selectNodeContents","setEnd","startOffset","metaRange","start","end","charIndex","nodeStack","foundStart","stop","pop","nextCharIndex","setStart","cn","push","tags","getTagsRecursive","activeClasses","dropdownBtnName","element","tagName","textAlign","tagHandler","loadedPlugins","plugin","shouldInit"],"mappings":"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","file":"/js/admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0abdaec33c076b5d8cde","import 'trumbowyg'\n\n$('.trumbowyg-form').trumbowyg({\n    svgPath: '/js/ui/icons.svg'\n})\n\n// Toggle the side navigation\n$(\"#sidenavToggler\").click(function(e) {\n    e.preventDefault()\n    $(\"body\").toggleClass(\"sidenav-toggled\")\n})\n\n// Configure tooltips for collapsed side navigation\n$('.navbar-sidenav [data-toggle=\"tooltip\"]').tooltip({\n    template: '<div class=\"tooltip navbar-sidenav-tooltip\" role=\"tooltip\"><div class=\"arrow\"></div><div class=\"tooltip-inner\"></div></div>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/admin.js","/**\n * Trumbowyg v2.11.1 - A lightweight WYSIWYG editor\n * Trumbowyg core file\n * ------------------------\n * @link http://alex-d.github.io/Trumbowyg\n * @license MIT\n * @author Alexandre Demode (Alex-D)\n *         Twitter : @AlexandreDemode\n *         Website : alex-d.fr\n */\n\njQuery.trumbowyg = {\n    langs: {\n        en: {\n            viewHTML: 'View HTML',\n\n            undo: 'Undo',\n            redo: 'Redo',\n\n            formatting: 'Formatting',\n            p: 'Paragraph',\n            blockquote: 'Quote',\n            code: 'Code',\n            header: 'Header',\n\n            bold: 'Bold',\n            italic: 'Italic',\n            strikethrough: 'Stroke',\n            underline: 'Underline',\n\n            strong: 'Strong',\n            em: 'Emphasis',\n            del: 'Deleted',\n\n            superscript: 'Superscript',\n            subscript: 'Subscript',\n\n            unorderedList: 'Unordered list',\n            orderedList: 'Ordered list',\n\n            insertImage: 'Insert Image',\n            link: 'Link',\n            createLink: 'Insert link',\n            unlink: 'Remove link',\n\n            justifyLeft: 'Align Left',\n            justifyCenter: 'Align Center',\n            justifyRight: 'Align Right',\n            justifyFull: 'Align Justify',\n\n            horizontalRule: 'Insert horizontal rule',\n            removeformat: 'Remove format',\n\n            fullscreen: 'Fullscreen',\n\n            close: 'Close',\n\n            submit: 'Confirm',\n            reset: 'Cancel',\n\n            required: 'Required',\n            description: 'Description',\n            title: 'Title',\n            text: 'Text',\n            target: 'Target',\n            width: 'Width'\n        }\n    },\n\n    // Plugins\n    plugins: {},\n\n    // SVG Path globally\n    svgPath: null,\n\n    hideButtonTexts: null\n};\n\n// Makes default options read-only\nObject.defineProperty(jQuery.trumbowyg, 'defaultOptions', {\n    value: {\n        lang: 'en',\n\n        fixedBtnPane: false,\n        fixedFullWidth: false,\n        autogrow: false,\n        autogrowOnEnter: false,\n        imageWidthModalEdit: false,\n\n        prefix: 'trumbowyg-',\n\n        semantic: true,\n        resetCss: false,\n        removeformatPasted: false,\n        tagsToRemove: [],\n        btns: [\n            ['viewHTML'],\n            ['undo', 'redo'], // Only supported in Blink browsers\n            ['formatting'],\n            ['strong', 'em', 'del'],\n            ['superscript', 'subscript'],\n            ['link'],\n            ['insertImage'],\n            ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],\n            ['unorderedList', 'orderedList'],\n            ['horizontalRule'],\n            ['removeformat'],\n            ['fullscreen']\n        ],\n        // For custom button definitions\n        btnsDef: {},\n\n        inlineElementsSelector: 'a,abbr,acronym,b,caption,cite,code,col,dfn,dir,dt,dd,em,font,hr,i,kbd,li,q,span,strikeout,strong,sub,sup,u',\n\n        pasteHandlers: [],\n\n        // imgDblClickHandler: default is defined in constructor\n\n        plugins: {},\n        urlProtocol: false,\n        minimalLinks: false\n    },\n    writable: false,\n    enumerable: true,\n    configurable: false\n});\n\n\n(function (navigator, window, document, $) {\n    'use strict';\n\n    var CONFIRM_EVENT = 'tbwconfirm',\n        CANCEL_EVENT = 'tbwcancel';\n\n    $.fn.trumbowyg = function (options, params) {\n        var trumbowygDataName = 'trumbowyg';\n        if (options === Object(options) || !options) {\n            return this.each(function () {\n                if (!$(this).data(trumbowygDataName)) {\n                    $(this).data(trumbowygDataName, new Trumbowyg(this, options));\n                }\n            });\n        }\n        if (this.length === 1) {\n            try {\n                var t = $(this).data(trumbowygDataName);\n                switch (options) {\n                    // Exec command\n                    case 'execCmd':\n                        return t.execCmd(params.cmd, params.param, params.forceCss);\n\n                    // Modal box\n                    case 'openModal':\n                        return t.openModal(params.title, params.content);\n                    case 'closeModal':\n                        return t.closeModal();\n                    case 'openModalInsert':\n                        return t.openModalInsert(params.title, params.fields, params.callback);\n\n                    // Range\n                    case 'saveRange':\n                        return t.saveRange();\n                    case 'getRange':\n                        return t.range;\n                    case 'getRangeText':\n                        return t.getRangeText();\n                    case 'restoreRange':\n                        return t.restoreRange();\n\n                    // Enable/disable\n                    case 'enable':\n                        return t.setDisabled(false);\n                    case 'disable':\n                        return t.setDisabled(true);\n\n                    // Toggle\n                    case 'toggle':\n                        return t.toggle();\n\n                    // Destroy\n                    case 'destroy':\n                        return t.destroy();\n\n                    // Empty\n                    case 'empty':\n                        return t.empty();\n\n                    // HTML\n                    case 'html':\n                        return t.html(params);\n                }\n            } catch (c) {\n            }\n        }\n\n        return false;\n    };\n\n    // @param: editorElem is the DOM element\n    var Trumbowyg = function (editorElem, options) {\n        var t = this,\n            trumbowygIconsId = 'trumbowyg-icons',\n            $trumbowyg = $.trumbowyg;\n\n        // Get the document of the element. It use to makes the plugin\n        // compatible on iframes.\n        t.doc = editorElem.ownerDocument || document;\n\n        // jQuery object of the editor\n        t.$ta = $(editorElem); // $ta : Textarea\n        t.$c = $(editorElem); // $c : creator\n\n        options = options || {};\n\n        // Localization management\n        if (options.lang != null || $trumbowyg.langs[options.lang] != null) {\n            t.lang = $.extend(true, {}, $trumbowyg.langs.en, $trumbowyg.langs[options.lang]);\n        } else {\n            t.lang = $trumbowyg.langs.en;\n        }\n\n        t.hideButtonTexts = $trumbowyg.hideButtonTexts != null ? $trumbowyg.hideButtonTexts : options.hideButtonTexts;\n\n        // SVG path\n        var svgPathOption = $trumbowyg.svgPath != null ? $trumbowyg.svgPath : options.svgPath;\n        t.hasSvg = svgPathOption !== false;\n        t.svgPath = !!t.doc.querySelector('base') ? window.location.href.split('#')[0] : '';\n        if ($('#' + trumbowygIconsId, t.doc).length === 0 && svgPathOption !== false) {\n            if (svgPathOption == null) {\n                // Hack to get svgPathOption based on trumbowyg.js path\n                var scriptElements = document.getElementsByTagName('script');\n                for (var i = 0; i < scriptElements.length; i += 1) {\n                    var source = scriptElements[i].src;\n                    var matches = source.match('trumbowyg(\\.min)?\\.js');\n                    if (matches != null) {\n                        svgPathOption = source.substring(0, source.indexOf(matches[0])) + 'ui/icons.svg';\n                    }\n                }\n                if (svgPathOption == null) {\n                    console.warn('You must define svgPath: https://goo.gl/CfTY9U'); // jshint ignore:line\n                }\n            }\n\n            var div = t.doc.createElement('div');\n            div.id = trumbowygIconsId;\n            t.doc.body.insertBefore(div, t.doc.body.childNodes[0]);\n            $.ajax({\n                async: true,\n                type: 'GET',\n                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n                dataType: 'xml',\n                crossDomain: true,\n                url: svgPathOption,\n                data: null,\n                beforeSend: null,\n                complete: null,\n                success: function (data) {\n                    div.innerHTML = new XMLSerializer().serializeToString(data.documentElement);\n                }\n            });\n        }\n\n\n        /**\n         * When the button is associated to a empty object\n         * fn and title attributs are defined from the button key value\n         *\n         * For example\n         *      foo: {}\n         * is equivalent to :\n         *      foo: {\n         *          fn: 'foo',\n         *          title: this.lang.foo\n         *      }\n         */\n        var h = t.lang.header, // Header translation\n            isBlinkFunction = function () {\n                return (window.chrome || (window.Intl && Intl.v8BreakIterator)) && 'CSS' in window;\n            };\n        t.btnsDef = {\n            viewHTML: {\n                fn: 'toggle',\n                class: 'trumbowyg-not-disable',\n            },\n\n            undo: {\n                isSupported: isBlinkFunction,\n                key: 'Z'\n            },\n            redo: {\n                isSupported: isBlinkFunction,\n                key: 'Y'\n            },\n\n            p: {\n                fn: 'formatBlock'\n            },\n            blockquote: {\n                fn: 'formatBlock'\n            },\n            h1: {\n                fn: 'formatBlock',\n                title: h + ' 1'\n            },\n            h2: {\n                fn: 'formatBlock',\n                title: h + ' 2'\n            },\n            h3: {\n                fn: 'formatBlock',\n                title: h + ' 3'\n            },\n            h4: {\n                fn: 'formatBlock',\n                title: h + ' 4'\n            },\n            subscript: {\n                tag: 'sub'\n            },\n            superscript: {\n                tag: 'sup'\n            },\n\n            bold: {\n                key: 'B',\n                tag: 'b'\n            },\n            italic: {\n                key: 'I',\n                tag: 'i'\n            },\n            underline: {\n                tag: 'u'\n            },\n            strikethrough: {\n                tag: 'strike'\n            },\n\n            strong: {\n                fn: 'bold',\n                key: 'B'\n            },\n            em: {\n                fn: 'italic',\n                key: 'I'\n            },\n            del: {\n                fn: 'strikethrough'\n            },\n\n            createLink: {\n                key: 'K',\n                tag: 'a'\n            },\n            unlink: {},\n\n            insertImage: {},\n\n            justifyLeft: {\n                tag: 'left',\n                forceCss: true\n            },\n            justifyCenter: {\n                tag: 'center',\n                forceCss: true\n            },\n            justifyRight: {\n                tag: 'right',\n                forceCss: true\n            },\n            justifyFull: {\n                tag: 'justify',\n                forceCss: true\n            },\n\n            unorderedList: {\n                fn: 'insertUnorderedList',\n                tag: 'ul'\n            },\n            orderedList: {\n                fn: 'insertOrderedList',\n                tag: 'ol'\n            },\n\n            horizontalRule: {\n                fn: 'insertHorizontalRule'\n            },\n\n            removeformat: {},\n\n            fullscreen: {\n                class: 'trumbowyg-not-disable'\n            },\n            close: {\n                fn: 'destroy',\n                class: 'trumbowyg-not-disable'\n            },\n\n            // Dropdowns\n            formatting: {\n                dropdown: ['p', 'blockquote', 'h1', 'h2', 'h3', 'h4'],\n                ico: 'p'\n            },\n            link: {\n                dropdown: ['createLink', 'unlink']\n            }\n        };\n\n        // Defaults Options\n        t.o = $.extend(true, {}, $trumbowyg.defaultOptions, options);\n        if (!t.o.hasOwnProperty('imgDblClickHandler')) {\n            t.o.imgDblClickHandler = t.getDefaultImgDblClickHandler();\n        }\n\n        t.urlPrefix = t.setupUrlPrefix();\n\n        t.disabled = t.o.disabled || (editorElem.nodeName === 'TEXTAREA' && editorElem.disabled);\n\n        if (options.btns) {\n            t.o.btns = options.btns;\n        } else if (!t.o.semantic) {\n            t.o.btns[3] = ['bold', 'italic', 'underline', 'strikethrough'];\n        }\n\n        $.each(t.o.btnsDef, function (btnName, btnDef) {\n            t.addBtnDef(btnName, btnDef);\n        });\n\n        // put this here in the event it would be merged in with options\n        t.eventNamespace = 'trumbowyg-event';\n\n        // Keyboard shortcuts are load in this array\n        t.keys = [];\n\n        // Tag to button dynamically hydrated\n        t.tagToButton = {};\n        t.tagHandlers = [];\n\n        // Admit multiple paste handlers\n        t.pasteHandlers = [].concat(t.o.pasteHandlers);\n\n        // Check if browser is IE\n        t.isIE = (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') !== -1);\n\n        t.init();\n    };\n\n    Trumbowyg.prototype = {\n        DEFAULT_SEMANTIC_MAP: {\n            'b': 'strong',\n            'i': 'em',\n            's': 'del',\n            'strike': 'del',\n            'div': 'p'\n        },\n\n        init: function () {\n            var t = this;\n            t.height = t.$ta.height();\n\n            t.initPlugins();\n\n            try {\n                // Disable image resize, try-catch for old IE\n                t.doc.execCommand('enableObjectResizing', false, false);\n                t.doc.execCommand('defaultParagraphSeparator', false, 'p');\n            } catch (e) {\n            }\n\n            t.buildEditor();\n            t.buildBtnPane();\n\n            t.fixedBtnPaneEvents();\n\n            t.buildOverlay();\n\n            setTimeout(function () {\n                if (t.disabled) {\n                    t.setDisabled(true);\n                }\n                t.$c.trigger('tbwinit');\n            });\n        },\n\n        addBtnDef: function (btnName, btnDef) {\n            this.btnsDef[btnName] = btnDef;\n        },\n\n        setupUrlPrefix: function () {\n            var protocol = this.o.urlProtocol;\n            if (!protocol) {\n                return;\n            }\n\n            if (typeof(protocol) !== 'string') {\n                return 'https://';\n            }\n            return /:\\/\\/$/.test(protocol) ? protocol : protocol + '://';\n        },\n\n        buildEditor: function () {\n            var t = this,\n                prefix = t.o.prefix,\n                html = '';\n\n            t.$box = $('<div/>', {\n                class: prefix + 'box ' + prefix + 'editor-visible ' + prefix + t.o.lang + ' trumbowyg'\n            });\n\n            // $ta = Textarea\n            // $ed = Editor\n            t.isTextarea = t.$ta.is('textarea');\n            if (t.isTextarea) {\n                html = t.$ta.val();\n                t.$ed = $('<div/>');\n                t.$box\n                    .insertAfter(t.$ta)\n                    .append(t.$ed, t.$ta);\n            } else {\n                t.$ed = t.$ta;\n                html = t.$ed.html();\n\n                t.$ta = $('<textarea/>', {\n                    name: t.$ta.attr('id'),\n                    height: t.height\n                }).val(html);\n\n                t.$box\n                    .insertAfter(t.$ed)\n                    .append(t.$ta, t.$ed);\n                t.syncCode();\n            }\n\n            t.$ta\n                .addClass(prefix + 'textarea')\n                .attr('tabindex', -1)\n            ;\n\n            t.$ed\n                .addClass(prefix + 'editor')\n                .attr({\n                    contenteditable: true,\n                    dir: t.lang._dir || 'ltr'\n                })\n                .html(html)\n            ;\n\n            if (t.o.tabindex) {\n                t.$ed.attr('tabindex', t.o.tabindex);\n            }\n\n            if (t.$c.is('[placeholder]')) {\n                t.$ed.attr('placeholder', t.$c.attr('placeholder'));\n            }\n\n            if (t.$c.is('[spellcheck]')) {\n                t.$ed.attr('spellcheck', t.$c.attr('spellcheck'));\n            }\n\n            if (t.o.resetCss) {\n                t.$ed.addClass(prefix + 'reset-css');\n            }\n\n            if (!t.o.autogrow) {\n                t.$ta.add(t.$ed).css({\n                    height: t.height\n                });\n            }\n\n            t.semanticCode();\n\n            if (t.o.autogrowOnEnter) {\n                t.$ed.addClass(prefix + 'autogrow-on-enter');\n            }\n\n            var ctrl = false,\n                composition = false,\n                debounceButtonPaneStatus,\n                updateEventName = 'keyup';\n\n            t.$ed\n                .on('dblclick', 'img', t.o.imgDblClickHandler)\n                .on('keydown', function (e) {\n                    if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                        ctrl = true;\n                        var key = t.keys[String.fromCharCode(e.which).toUpperCase()];\n\n                        try {\n                            t.execCmd(key.fn, key.param);\n                            return false;\n                        } catch (c) {\n                        }\n                    }\n                })\n                .on('compositionstart compositionupdate', function () {\n                    composition = true;\n                })\n                .on(updateEventName + ' compositionend', function (e) {\n                    if (e.type === 'compositionend') {\n                        composition = false;\n                    } else if (composition) {\n                        return;\n                    }\n\n                    var keyCode = e.which;\n\n                    if (keyCode >= 37 && keyCode <= 40) {\n                        return;\n                    }\n\n                    if ((e.ctrlKey || e.metaKey) && (keyCode === 89 || keyCode === 90)) {\n                        t.$c.trigger('tbwchange');\n                    } else if (!ctrl && keyCode !== 17) {\n                        var compositionEndIE = t.isIE ? e.type === 'compositionend' : true;\n                        t.semanticCode(false, compositionEndIE && keyCode === 13);\n                        t.$c.trigger('tbwchange');\n                    } else if (typeof e.which === 'undefined') {\n                        t.semanticCode(false, false, true);\n                    }\n\n                    setTimeout(function () {\n                        ctrl = false;\n                    }, 50);\n                })\n                .on('mouseup keydown keyup', function (e) {\n                    if ((!e.ctrlKey && !e.metaKey) || e.altKey) {\n                        setTimeout(function () { // \"hold on\" to the ctrl key for 50ms\n                            ctrl = false;\n                        }, 50);\n                    }\n                    clearTimeout(debounceButtonPaneStatus);\n                    debounceButtonPaneStatus = setTimeout(function () {\n                        t.updateButtonPaneStatus();\n                    }, 50);\n                })\n                .on('focus blur', function (e) {\n                    t.$c.trigger('tbw' + e.type);\n                    if (e.type === 'blur') {\n                        $('.' + prefix + 'active-button', t.$btnPane).removeClass(prefix + 'active-button ' + prefix + 'active');\n                    }\n                    if (t.o.autogrowOnEnter) {\n                        if (t.autogrowOnEnterDontClose) {\n                            return;\n                        }\n                        if (e.type === 'focus') {\n                            t.autogrowOnEnterWasFocused = true;\n                            t.autogrowEditorOnEnter();\n                        }\n                        else if (!t.o.autogrow) {\n                            t.$ed.css({height: t.$ed.css('min-height')});\n                            t.$c.trigger('tbwresize');\n                        }\n                    }\n                })\n                .on('cut', function () {\n                    setTimeout(function () {\n                        t.semanticCode(false, true);\n                        t.$c.trigger('tbwchange');\n                    }, 0);\n                })\n                .on('paste', function (e) {\n                    if (t.o.removeformatPasted) {\n                        e.preventDefault();\n\n                        if (window.getSelection && window.getSelection().deleteFromDocument) {\n                            window.getSelection().deleteFromDocument();\n                        }\n\n                        try {\n                            // IE\n                            var text = window.clipboardData.getData('Text');\n\n                            try {\n                                // <= IE10\n                                t.doc.selection.createRange().pasteHTML(text);\n                            } catch (c) {\n                                // IE 11\n                                t.doc.getSelection().getRangeAt(0).insertNode(t.doc.createTextNode(text));\n                            }\n                            t.$c.trigger('tbwchange', e);\n                        } catch (d) {\n                            // Not IE\n                            t.execCmd('insertText', (e.originalEvent || e).clipboardData.getData('text/plain'));\n                        }\n                    }\n\n                    // Call pasteHandlers\n                    $.each(t.pasteHandlers, function (i, pasteHandler) {\n                        pasteHandler(e);\n                    });\n\n                    setTimeout(function () {\n                        t.semanticCode(false, true);\n                        t.$c.trigger('tbwpaste', e);\n                    }, 0);\n                });\n\n            t.$ta\n                .on('keyup', function () {\n                    t.$c.trigger('tbwchange');\n                })\n                .on('paste', function () {\n                    setTimeout(function () {\n                        t.$c.trigger('tbwchange');\n                    }, 0);\n                });\n\n            t.$box.on('keydown', function (e) {\n                if (e.which === 27 && $('.' + prefix + 'modal-box', t.$box).length === 1) {\n                    t.closeModal();\n                    return false;\n                }\n            });\n        },\n\n        //autogrow when entering logic\n        autogrowEditorOnEnter: function () {\n            var t = this;\n            t.$ed.removeClass('autogrow-on-enter');\n            var oldHeight = t.$ed[0].clientHeight;\n            t.$ed.height('auto');\n            var totalHeight = t.$ed[0].scrollHeight;\n            t.$ed.addClass('autogrow-on-enter');\n            if (oldHeight !== totalHeight) {\n                t.$ed.height(oldHeight);\n                setTimeout(function () {\n                    t.$ed.css({height: totalHeight});\n                    t.$c.trigger('tbwresize');\n                }, 0);\n            }\n        },\n\n\n        // Build button pane, use o.btns option\n        buildBtnPane: function () {\n            var t = this,\n                prefix = t.o.prefix;\n\n            var $btnPane = t.$btnPane = $('<div/>', {\n                class: prefix + 'button-pane'\n            });\n\n            $.each(t.o.btns, function (i, btnGrp) {\n                if (!$.isArray(btnGrp)) {\n                    btnGrp = [btnGrp];\n                }\n\n                var $btnGroup = $('<div/>', {\n                    class: prefix + 'button-group ' + ((btnGrp.indexOf('fullscreen') >= 0) ? prefix + 'right' : '')\n                });\n                $.each(btnGrp, function (i, btn) {\n                    try { // Prevent buildBtn error\n                        if (t.isSupportedBtn(btn)) { // It's a supported button\n                            $btnGroup.append(t.buildBtn(btn));\n                        }\n                    } catch (c) {\n                    }\n                });\n\n                if ($btnGroup.html().trim().length > 0) {\n                    $btnPane.append($btnGroup);\n                }\n            });\n\n            t.$box.prepend($btnPane);\n        },\n\n\n        // Build a button and his action\n        buildBtn: function (btnName) { // btnName is name of the button\n            var t = this,\n                prefix = t.o.prefix,\n                btn = t.btnsDef[btnName],\n                isDropdown = btn.dropdown,\n                hasIcon = btn.hasIcon != null ? btn.hasIcon : true,\n                textDef = t.lang[btnName] || btnName,\n\n                $btn = $('<button/>', {\n                    type: 'button',\n                    class: prefix + btnName + '-button ' + (btn.class || '') + (!hasIcon ? ' ' + prefix + 'textual-button' : ''),\n                    html: t.hasSvg && hasIcon ?\n                        '<svg><use xlink:href=\"' + t.svgPath + '#' + prefix + (btn.ico || btnName).replace(/([A-Z]+)/g, '-$1').toLowerCase() + '\"/></svg>' :\n                        t.hideButtonTexts ? '' : (btn.text || btn.title || t.lang[btnName] || btnName),\n                    title: (btn.title || btn.text || textDef) + ((btn.key) ? ' (Ctrl + ' + btn.key + ')' : ''),\n                    tabindex: -1,\n                    mousedown: function () {\n                        if (!isDropdown || $('.' + btnName + '-' + prefix + 'dropdown', t.$box).is(':hidden')) {\n                            $('body', t.doc).trigger('mousedown');\n                        }\n\n                        if ((t.$btnPane.hasClass(prefix + 'disable') || t.$box.hasClass(prefix + 'disabled')) &&\n                            !$(this).hasClass(prefix + 'active') &&\n                            !$(this).hasClass(prefix + 'not-disable')) {\n                            return false;\n                        }\n\n                        t.execCmd((isDropdown ? 'dropdown' : false) || btn.fn || btnName, btn.param || btnName, btn.forceCss);\n\n                        return false;\n                    }\n                });\n\n            if (isDropdown) {\n                $btn.addClass(prefix + 'open-dropdown');\n                var dropdownPrefix = prefix + 'dropdown',\n                    dropdownOptions = { // the dropdown\n                        class: dropdownPrefix + '-' + btnName + ' ' + dropdownPrefix + ' ' + prefix + 'fixed-top'\n                    };\n                dropdownOptions['data-' + dropdownPrefix] = btnName;\n                var $dropdown = $('<div/>', dropdownOptions);\n                $.each(isDropdown, function (i, def) {\n                    if (t.btnsDef[def] && t.isSupportedBtn(def)) {\n                        $dropdown.append(t.buildSubBtn(def));\n                    }\n                });\n                t.$box.append($dropdown.hide());\n            } else if (btn.key) {\n                t.keys[btn.key] = {\n                    fn: btn.fn || btnName,\n                    param: btn.param || btnName\n                };\n            }\n\n            if (!isDropdown) {\n                t.tagToButton[(btn.tag || btnName).toLowerCase()] = btnName;\n            }\n\n            return $btn;\n        },\n        // Build a button for dropdown menu\n        // @param n : name of the subbutton\n        buildSubBtn: function (btnName) {\n            var t = this,\n                prefix = t.o.prefix,\n                btn = t.btnsDef[btnName],\n                hasIcon = btn.hasIcon != null ? btn.hasIcon : true;\n\n            if (btn.key) {\n                t.keys[btn.key] = {\n                    fn: btn.fn || btnName,\n                    param: btn.param || btnName\n                };\n            }\n\n            t.tagToButton[(btn.tag || btnName).toLowerCase()] = btnName;\n\n            return $('<button/>', {\n                type: 'button',\n                class: prefix + btnName + '-dropdown-button' + (btn.ico ? ' ' + prefix + btn.ico + '-button' : ''),\n                html: t.hasSvg && hasIcon ? '<svg><use xlink:href=\"' + t.svgPath + '#' + prefix + (btn.ico || btnName).replace(/([A-Z]+)/g, '-$1').toLowerCase() + '\"/></svg>' + (btn.text || btn.title || t.lang[btnName] || btnName) : (btn.text || btn.title || t.lang[btnName] || btnName),\n                title: ((btn.key) ? ' (Ctrl + ' + btn.key + ')' : null),\n                style: btn.style || null,\n                mousedown: function () {\n                    $('body', t.doc).trigger('mousedown');\n\n                    t.execCmd(btn.fn || btnName, btn.param || btnName, btn.forceCss);\n\n                    return false;\n                }\n            });\n        },\n        // Check if button is supported\n        isSupportedBtn: function (b) {\n            try {\n                return this.btnsDef[b].isSupported();\n            } catch (c) {\n            }\n            return true;\n        },\n\n        // Build overlay for modal box\n        buildOverlay: function () {\n            var t = this;\n            t.$overlay = $('<div/>', {\n                class: t.o.prefix + 'overlay'\n            }).appendTo(t.$box);\n            return t.$overlay;\n        },\n        showOverlay: function () {\n            var t = this;\n            $(window).trigger('scroll');\n            t.$overlay.fadeIn(200);\n            t.$box.addClass(t.o.prefix + 'box-blur');\n        },\n        hideOverlay: function () {\n            var t = this;\n            t.$overlay.fadeOut(50);\n            t.$box.removeClass(t.o.prefix + 'box-blur');\n        },\n\n        // Management of fixed button pane\n        fixedBtnPaneEvents: function () {\n            var t = this,\n                fixedFullWidth = t.o.fixedFullWidth,\n                $box = t.$box;\n\n            if (!t.o.fixedBtnPane) {\n                return;\n            }\n\n            t.isFixed = false;\n\n            $(window)\n                .on('scroll.' + t.eventNamespace + ' resize.' + t.eventNamespace, function () {\n                    if (!$box) {\n                        return;\n                    }\n\n                    t.syncCode();\n\n                    var scrollTop = $(window).scrollTop(),\n                        offset = $box.offset().top + 1,\n                        bp = t.$btnPane,\n                        oh = bp.outerHeight() - 2;\n\n                    if ((scrollTop - offset > 0) && ((scrollTop - offset - t.height) < 0)) {\n                        if (!t.isFixed) {\n                            t.isFixed = true;\n                            bp.css({\n                                position: 'fixed',\n                                top: 0,\n                                left: fixedFullWidth ? '0' : 'auto',\n                                zIndex: 7\n                            });\n                            $([t.$ta, t.$ed]).css({marginTop: bp.height()});\n                        }\n                        bp.css({\n                            width: fixedFullWidth ? '100%' : (($box.width() - 1) + 'px')\n                        });\n\n                        $('.' + t.o.prefix + 'fixed-top', $box).css({\n                            position: fixedFullWidth ? 'fixed' : 'absolute',\n                            top: fixedFullWidth ? oh : oh + (scrollTop - offset) + 'px',\n                            zIndex: 15\n                        });\n                    } else if (t.isFixed) {\n                        t.isFixed = false;\n                        bp.removeAttr('style');\n                        $([t.$ta, t.$ed]).css({marginTop: 0});\n                        $('.' + t.o.prefix + 'fixed-top', $box).css({\n                            position: 'absolute',\n                            top: oh\n                        });\n                    }\n                });\n        },\n\n        // Disable editor\n        setDisabled: function (disable) {\n            var t = this,\n                prefix = t.o.prefix;\n\n            t.disabled = disable;\n\n            if (disable) {\n                t.$ta.attr('disabled', true);\n            } else {\n                t.$ta.removeAttr('disabled');\n            }\n            t.$box.toggleClass(prefix + 'disabled', disable);\n            t.$ed.attr('contenteditable', !disable);\n        },\n\n        // Destroy the editor\n        destroy: function () {\n            var t = this,\n                prefix = t.o.prefix;\n\n            if (t.isTextarea) {\n                t.$box.after(\n                    t.$ta\n                        .css({height: ''})\n                        .val(t.html())\n                        .removeClass(prefix + 'textarea')\n                        .show()\n                );\n            } else {\n                t.$box.after(\n                    t.$ed\n                        .css({height: ''})\n                        .removeClass(prefix + 'editor')\n                        .removeAttr('contenteditable')\n                        .removeAttr('dir')\n                        .html(t.html())\n                        .show()\n                );\n            }\n\n            t.$ed.off('dblclick', 'img');\n\n            t.destroyPlugins();\n\n            t.$box.remove();\n            t.$c.removeData('trumbowyg');\n            $('body').removeClass(prefix + 'body-fullscreen');\n            t.$c.trigger('tbwclose');\n            $(window).off('scroll.' + t.eventNamespace + ' resize.' + t.eventNamespace);\n        },\n\n\n        // Empty the editor\n        empty: function () {\n            this.$ta.val('');\n            this.syncCode(true);\n        },\n\n\n        // Function call when click on viewHTML button\n        toggle: function () {\n            var t = this,\n                prefix = t.o.prefix;\n\n            if (t.o.autogrowOnEnter) {\n                t.autogrowOnEnterDontClose = !t.$box.hasClass(prefix + 'editor-hidden');\n            }\n\n            t.semanticCode(false, true);\n\n            setTimeout(function () {\n                t.doc.activeElement.blur();\n                t.$box.toggleClass(prefix + 'editor-hidden ' + prefix + 'editor-visible');\n                t.$btnPane.toggleClass(prefix + 'disable');\n                $('.' + prefix + 'viewHTML-button', t.$btnPane).toggleClass(prefix + 'active');\n                if (t.$box.hasClass(prefix + 'editor-visible')) {\n                    t.$ta.attr('tabindex', -1);\n                } else {\n                    t.$ta.removeAttr('tabindex');\n                }\n\n                if (t.o.autogrowOnEnter && !t.autogrowOnEnterDontClose) {\n                    t.autogrowEditorOnEnter();\n                }\n            }, 0);\n        },\n\n        // Open dropdown when click on a button which open that\n        dropdown: function (name) {\n            var t = this,\n                d = t.doc,\n                prefix = t.o.prefix,\n                $dropdown = $('[data-' + prefix + 'dropdown=' + name + ']', t.$box),\n                $btn = $('.' + prefix + name + '-button', t.$btnPane),\n                show = $dropdown.is(':hidden');\n\n            $('body', d).trigger('mousedown');\n\n            if (show) {\n                var o = $btn.offset().left;\n                $btn.addClass(prefix + 'active');\n\n                $dropdown.css({\n                    position: 'absolute',\n                    top: $btn.offset().top - t.$btnPane.offset().top + $btn.outerHeight(),\n                    left: (t.o.fixedFullWidth && t.isFixed) ? o + 'px' : (o - t.$btnPane.offset().left) + 'px'\n                }).show();\n\n                $(window).trigger('scroll');\n\n                $('body', d).on('mousedown.' + t.eventNamespace, function (e) {\n                    if (!$dropdown.is(e.target)) {\n                        $('.' + prefix + 'dropdown', t.$box).hide();\n                        $('.' + prefix + 'active', t.$btnPane).removeClass(prefix + 'active');\n                        $('body', d).off('mousedown.' + t.eventNamespace);\n                    }\n                });\n            }\n        },\n\n\n        // HTML Code management\n        html: function (html) {\n            var t = this;\n\n            if (html != null) {\n                t.$ta.val(html);\n                t.syncCode(true);\n                t.$c.trigger('tbwchange');\n                return t;\n            }\n\n            return t.$ta.val();\n        },\n        syncTextarea: function () {\n            var t = this;\n            t.$ta.val(t.$ed.text().trim().length > 0 || t.$ed.find('hr,img,embed,iframe,input').length > 0 ? t.$ed.html() : '');\n        },\n        syncCode: function (force) {\n            var t = this;\n            if (!force && t.$ed.is(':visible')) {\n                t.syncTextarea();\n            } else {\n                // wrap the content in a div it's easier to get the innerhtml\n                var html = $('<div>').html(t.$ta.val());\n                //scrub the html before loading into the doc\n                var safe = $('<div>').append(html);\n                $(t.o.tagsToRemove.join(','), safe).remove();\n                t.$ed.html(safe.contents().html());\n            }\n\n            if (t.o.autogrow) {\n                t.height = t.$ed.height();\n                if (t.height !== t.$ta.css('height')) {\n                    t.$ta.css({height: t.height});\n                    t.$c.trigger('tbwresize');\n                }\n            }\n            if (t.o.autogrowOnEnter) {\n                // t.autogrowEditorOnEnter();\n                t.$ed.height('auto');\n                var totalheight = t.autogrowOnEnterWasFocused ? t.$ed[0].scrollHeight : t.$ed.css('min-height');\n                if (totalheight !== t.$ta.css('height')) {\n                    t.$ed.css({height: totalheight});\n                    t.$c.trigger('tbwresize');\n                }\n            }\n        },\n\n        // Analyse and update to semantic code\n        // @param force : force to sync code from textarea\n        // @param full  : wrap text nodes in <p>\n        // @param keepRange  : leave selection range as it is\n        semanticCode: function (force, full, keepRange) {\n            var t = this;\n            t.saveRange();\n            t.syncCode(force);\n\n            if (t.o.semantic) {\n                t.semanticTag('b');\n                t.semanticTag('i');\n                t.semanticTag('s');\n                t.semanticTag('strike');\n\n                if (full) {\n                    var inlineElementsSelector = t.o.inlineElementsSelector,\n                        blockElementsSelector = ':not(' + inlineElementsSelector + ')';\n\n                    // Wrap text nodes in span for easier processing\n                    t.$ed.contents().filter(function () {\n                        return this.nodeType === 3 && this.nodeValue.trim().length > 0;\n                    }).wrap('<span data-tbw/>');\n\n                    // Wrap groups of inline elements in paragraphs (recursive)\n                    var wrapInlinesInParagraphsFrom = function ($from) {\n                        if ($from.length !== 0) {\n                            var $finalParagraph = $from.nextUntil(blockElementsSelector).addBack().wrapAll('<p/>').parent(),\n                                $nextElement = $finalParagraph.nextAll(inlineElementsSelector).first();\n                            $finalParagraph.next('br').remove();\n                            wrapInlinesInParagraphsFrom($nextElement);\n                        }\n                    };\n                    wrapInlinesInParagraphsFrom(t.$ed.children(inlineElementsSelector).first());\n\n                    t.semanticTag('div', true);\n\n                    // Unwrap paragraphs content, containing nothing usefull\n                    t.$ed.find('p').filter(function () {\n                        // Don't remove currently being edited element\n                        if (t.range && this === t.range.startContainer) {\n                            return false;\n                        }\n                        return $(this).text().trim().length === 0 && $(this).children().not('br,span').length === 0;\n                    }).contents().unwrap();\n\n                    // Get rid of temporial span's\n                    $('[data-tbw]', t.$ed).contents().unwrap();\n\n                    // Remove empty <p>\n                    t.$ed.find('p:empty').remove();\n                }\n\n                if (!keepRange) {\n                    t.restoreRange();\n                }\n\n                t.syncTextarea();\n            }\n        },\n\n        semanticTag: function (oldTag, copyAttributes) {\n            var newTag;\n\n            if (this.o.semantic != null && typeof this.o.semantic === 'object' && this.o.semantic.hasOwnProperty(oldTag)) {\n                newTag = this.o.semantic[oldTag];\n            } else if (this.o.semantic === true && this.DEFAULT_SEMANTIC_MAP.hasOwnProperty(oldTag)) {\n                newTag = this.DEFAULT_SEMANTIC_MAP[oldTag];\n            } else {\n                return;\n            }\n\n            $(oldTag, this.$ed).each(function () {\n                var $oldTag = $(this);\n                $oldTag.wrap('<' + newTag + '/>');\n                if (copyAttributes) {\n                    $.each($oldTag.prop('attributes'), function () {\n                        $oldTag.parent().attr(this.name, this.value);\n                    });\n                }\n                $oldTag.contents().unwrap();\n            });\n        },\n\n        // Function call when user click on \"Insert Link\"\n        createLink: function () {\n            var t = this,\n                documentSelection = t.doc.getSelection(),\n                node = documentSelection.focusNode,\n                text = new XMLSerializer().serializeToString(documentSelection.getRangeAt(0).cloneContents()),\n                url,\n                title,\n                target;\n\n            while (['A', 'DIV'].indexOf(node.nodeName) < 0) {\n                node = node.parentNode;\n            }\n\n            if (node && node.nodeName === 'A') {\n                var $a = $(node);\n                text = $a.text();\n                url = $a.attr('href');\n                if (!t.o.minimalLinks) {\n                    title = $a.attr('title');\n                    target = $a.attr('target');\n                }\n                var range = t.doc.createRange();\n                range.selectNode(node);\n                documentSelection.removeAllRanges();\n                documentSelection.addRange(range);\n            }\n\n            t.saveRange();\n\n            var options = {\n                url: {\n                    label: 'URL',\n                    required: true,\n                    value: url\n                },\n                text: {\n                    label: t.lang.text,\n                    value: text\n                }\n            };\n            if (!t.o.minimalLinks) {\n                Object.assign(options, {\n                    title: {\n                        label: t.lang.title,\n                        value: title\n                    },\n                    target: {\n                        label: t.lang.target,\n                        value: target\n                    }\n                });\n            }\n\n            t.openModalInsert(t.lang.createLink, options, function (v) { // v is value\n                var url = t.prependUrlPrefix(v.url);\n                if (!url.length) {\n                    return false;\n                }\n\n                var link = $(['<a href=\"', url, '\">', v.text || v.url, '</a>'].join(''));\n\n                if (!t.o.minimalLinks) {\n                    if (v.title.length > 0) {\n                        link.attr('title', v.title);\n                    }\n                    if (v.target.length > 0) {\n                        link.attr('target', v.target);\n                    }\n                }\n                t.range.deleteContents();\n                t.range.insertNode(link[0]);\n                t.syncCode();\n                t.$c.trigger('tbwchange');\n                return true;\n            });\n        },\n        prependUrlPrefix: function (url) {\n            var t = this;\n            if (!t.urlPrefix) {\n                return url;\n            }\n\n            var VALID_LINK_PREFIX = /^([a-z][-+.a-z0-9]*:|\\/|#)/i;\n            if (VALID_LINK_PREFIX.test(url)) {\n                return url;\n            }\n\n            var SIMPLE_EMAIL_REGEX = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n            if (SIMPLE_EMAIL_REGEX.test(url)) {\n                return 'mailto:' + url;\n            }\n\n            return t.urlPrefix + url;\n        },\n        unlink: function () {\n            var t = this,\n                documentSelection = t.doc.getSelection(),\n                node = documentSelection.focusNode;\n\n            if (documentSelection.isCollapsed) {\n                while (['A', 'DIV'].indexOf(node.nodeName) < 0) {\n                    node = node.parentNode;\n                }\n\n                if (node && node.nodeName === 'A') {\n                    var range = t.doc.createRange();\n                    range.selectNode(node);\n                    documentSelection.removeAllRanges();\n                    documentSelection.addRange(range);\n                }\n            }\n            t.execCmd('unlink', undefined, undefined, true);\n        },\n        insertImage: function () {\n            var t = this;\n            t.saveRange();\n\n            var options = {\n                url: {\n                    label: 'URL',\n                    required: true\n                },\n                alt: {\n                    label: t.lang.description,\n                    value: t.getRangeText()\n                }\n            };\n\n            if (t.o.imageWidthModalEdit) {\n                options.width = {};\n            }\n\n            t.openModalInsert(t.lang.insertImage, options, function (v) { // v are values\n                t.execCmd('insertImage', v.url);\n                var $img = $('img[src=\"' + v.url + '\"]:not([alt])', t.$box);\n                $img.attr('alt', v.alt);\n\n                if (t.o.imageWidthModalEdit) {\n                    $img.attr({\n                        width: v.width\n                    });\n                }\n\n                t.syncCode();\n                t.$c.trigger('tbwchange');\n\n                return true;\n            });\n        },\n        fullscreen: function () {\n            var t = this,\n                prefix = t.o.prefix,\n                fullscreenCssClass = prefix + 'fullscreen',\n                isFullscreen;\n\n            t.$box.toggleClass(fullscreenCssClass);\n            isFullscreen = t.$box.hasClass(fullscreenCssClass);\n            $('body').toggleClass(prefix + 'body-fullscreen', isFullscreen);\n            $(window).trigger('scroll');\n            t.$c.trigger('tbw' + (isFullscreen ? 'open' : 'close') + 'fullscreen');\n        },\n\n\n        /*\n         * Call method of trumbowyg if exist\n         * else try to call anonymous function\n         * and finaly native execCommand\n         */\n        execCmd: function (cmd, param, forceCss, skipTrumbowyg) {\n            var t = this;\n            skipTrumbowyg = !!skipTrumbowyg || '';\n\n            if (cmd !== 'dropdown') {\n                t.$ed.focus();\n            }\n\n            try {\n                t.doc.execCommand('styleWithCSS', false, forceCss || false);\n            } catch (c) {\n            }\n\n            try {\n                t[cmd + skipTrumbowyg](param);\n            } catch (c) {\n                try {\n                    cmd(param);\n                } catch (e2) {\n                    if (cmd === 'insertHorizontalRule') {\n                        param = undefined;\n                    } else if (cmd === 'formatBlock' && t.isIE) {\n                        param = '<' + param + '>';\n                    }\n\n                    t.doc.execCommand(cmd, false, param);\n\n                    t.syncCode();\n                    t.semanticCode(false, true);\n                }\n\n                if (cmd !== 'dropdown') {\n                    t.updateButtonPaneStatus();\n                    t.$c.trigger('tbwchange');\n                }\n            }\n        },\n\n\n        // Open a modal box\n        openModal: function (title, content) {\n            var t = this,\n                prefix = t.o.prefix;\n\n            // No open a modal box when exist other modal box\n            if ($('.' + prefix + 'modal-box', t.$box).length > 0) {\n                return false;\n            }\n            if (t.o.autogrowOnEnter) {\n                t.autogrowOnEnterDontClose = true;\n            }\n\n            t.saveRange();\n            t.showOverlay();\n\n            // Disable all btnPane btns\n            t.$btnPane.addClass(prefix + 'disable');\n\n            // Build out of ModalBox, it's the mask for animations\n            var $modal = $('<div/>', {\n                class: prefix + 'modal ' + prefix + 'fixed-top'\n            }).css({\n                top: t.$box.offset().top + t.$btnPane.height(),\n                zIndex: 99999\n            }).appendTo($(document.body));\n\n            // Click on overlay close modal by cancelling them\n            t.$overlay.one('click', function () {\n                $modal.trigger(CANCEL_EVENT);\n                return false;\n            });\n\n            // Build the form\n            var $form = $('<form/>', {\n                action: '',\n                html: content\n            })\n                .on('submit', function () {\n                    $modal.trigger(CONFIRM_EVENT);\n                    return false;\n                })\n                .on('reset', function () {\n                    $modal.trigger(CANCEL_EVENT);\n                    return false;\n                })\n                .on('submit reset', function () {\n                    if (t.o.autogrowOnEnter) {\n                        t.autogrowOnEnterDontClose = false;\n                    }\n                });\n\n\n            // Build ModalBox and animate to show them\n            var $box = $('<div/>', {\n                class: prefix + 'modal-box',\n                html: $form\n            })\n                .css({\n                    top: '-' + t.$btnPane.outerHeight() + 'px',\n                    opacity: 0\n                })\n                .appendTo($modal)\n                .animate({\n                    top: 0,\n                    opacity: 1\n                }, 100);\n\n\n            // Append title\n            $('<span/>', {\n                text: title,\n                class: prefix + 'modal-title'\n            }).prependTo($box);\n\n            $modal.height($box.outerHeight() + 10);\n\n\n            // Focus in modal box\n            $('input:first', $box).focus();\n\n\n            // Append Confirm and Cancel buttons\n            t.buildModalBtn('submit', $box);\n            t.buildModalBtn('reset', $box);\n\n\n            $(window).trigger('scroll');\n\n            return $modal;\n        },\n        // @param n is name of modal\n        buildModalBtn: function (n, $modal) {\n            var t = this,\n                prefix = t.o.prefix;\n\n            return $('<button/>', {\n                class: prefix + 'modal-button ' + prefix + 'modal-' + n,\n                type: n,\n                text: t.lang[n] || n\n            }).appendTo($('form', $modal));\n        },\n        // close current modal box\n        closeModal: function () {\n            var t = this,\n                prefix = t.o.prefix;\n\n            t.$btnPane.removeClass(prefix + 'disable');\n            t.$overlay.off();\n\n            // Find the modal box\n            var $modalBox = $('.' + prefix + 'modal-box', $(document.body));\n\n            $modalBox.animate({\n                top: '-' + $modalBox.height()\n            }, 100, function () {\n                $modalBox.parent().remove();\n                t.hideOverlay();\n            });\n\n            t.restoreRange();\n        },\n        // Preformated build and management modal\n        openModalInsert: function (title, fields, cmd) {\n            var t = this,\n                prefix = t.o.prefix,\n                lg = t.lang,\n                html = '';\n\n            $.each(fields, function (fieldName, field) {\n                var l = field.label || fieldName,\n                    n = field.name || fieldName,\n                    a = field.attributes || {};\n\n                var attr = Object.keys(a).map(function (prop) {\n                    return prop + '=\"' + a[prop] + '\"';\n                }).join(' ');\n\n                html += '<label><input type=\"' + (field.type || 'text') + '\" name=\"' + n + '\"' +\n                    (field.type === 'checkbox' && field.value ? ' checked=\"checked\"' : ' value=\"' + (field.value || '').replace(/\"/g, '&quot;')) +\n                    '\"' + attr + '><span class=\"' + prefix + 'input-infos\"><span>' +\n                    (lg[l] ? lg[l] : l) +\n                    '</span></span></label>';\n            });\n\n            return t.openModal(title, html)\n                .on(CONFIRM_EVENT, function () {\n                    var $form = $('form', $(this)),\n                        valid = true,\n                        values = {};\n\n                    $.each(fields, function (fieldName, field) {\n                        var n = field.name || fieldName;\n\n                        var $field = $('input[name=\"' + n + '\"]', $form),\n                            inputType = $field.attr('type');\n\n                        switch (inputType.toLowerCase()) {\n                            case 'checkbox':\n                                values[n] = $field.is(':checked');\n                                break;\n                            case 'radio':\n                                values[n] = $field.filter(':checked').val();\n                                break;\n                            default:\n                                values[n] = $.trim($field.val());\n                                break;\n                        }\n                        // Validate value\n                        if (field.required && values[n] === '') {\n                            valid = false;\n                            t.addErrorOnModalField($field, t.lang.required);\n                        } else if (field.pattern && !field.pattern.test(values[n])) {\n                            valid = false;\n                            t.addErrorOnModalField($field, field.patternError);\n                        }\n                    });\n\n                    if (valid) {\n                        t.restoreRange();\n\n                        if (cmd(values, fields)) {\n                            t.syncCode();\n                            t.$c.trigger('tbwchange');\n                            t.closeModal();\n                            $(this).off(CONFIRM_EVENT);\n                        }\n                    }\n                })\n                .one(CANCEL_EVENT, function () {\n                    $(this).off(CONFIRM_EVENT);\n                    t.closeModal();\n                });\n        },\n        addErrorOnModalField: function ($field, err) {\n            var prefix = this.o.prefix,\n                $label = $field.parent();\n\n            $field\n                .on('change keyup', function () {\n                    $label.removeClass(prefix + 'input-error');\n                });\n\n            $label\n                .addClass(prefix + 'input-error')\n                .find('input+span')\n                .append(\n                    $('<span/>', {\n                        class: prefix + 'msg-error',\n                        text: err\n                    })\n                );\n        },\n\n        getDefaultImgDblClickHandler: function () {\n            var t = this;\n\n            return function () {\n                var $img = $(this),\n                    src = $img.attr('src'),\n                    base64 = '(Base64)';\n\n                if (src.indexOf('data:image') === 0) {\n                    src = base64;\n                }\n\n                var options = {\n                    url: {\n                        label: 'URL',\n                        value: src,\n                        required: true\n                    },\n                    alt: {\n                        label: t.lang.description,\n                        value: $img.attr('alt')\n                    }\n                };\n\n                if (t.o.imageWidthModalEdit) {\n                    options.width = {\n                        value: $img.attr('width') ? $img.attr('width') : ''\n                    };\n                }\n\n                t.openModalInsert(t.lang.insertImage, options, function (v) {\n                    if (v.url !== base64) {\n                        $img.attr({\n                            src: v.url\n                        });\n                    }\n                    $img.attr({\n                        alt: v.alt\n                    });\n\n                    if (t.o.imageWidthModalEdit) {\n                        if (parseInt(v.width) > 0) {\n                            $img.attr({\n                                width: v.width\n                            });\n                        } else {\n                            $img.removeAttr('width');\n                        }\n                    }\n\n                    return true;\n                });\n                return false;\n            };\n        },\n\n        // Range management\n        saveRange: function () {\n            var t = this,\n                documentSelection = t.doc.getSelection();\n\n            t.range = null;\n\n            if (documentSelection.rangeCount) {\n                var savedRange = t.range = documentSelection.getRangeAt(0),\n                    range = t.doc.createRange(),\n                    rangeStart;\n                range.selectNodeContents(t.$ed[0]);\n                range.setEnd(savedRange.startContainer, savedRange.startOffset);\n                rangeStart = (range + '').length;\n                t.metaRange = {\n                    start: rangeStart,\n                    end: rangeStart + (savedRange + '').length\n                };\n            }\n        },\n        restoreRange: function () {\n            var t = this,\n                metaRange = t.metaRange,\n                savedRange = t.range,\n                documentSelection = t.doc.getSelection(),\n                range;\n\n            if (!savedRange) {\n                return;\n            }\n\n            if (metaRange && metaRange.start !== metaRange.end) { // Algorithm from http://jsfiddle.net/WeWy7/3/\n                var charIndex = 0,\n                    nodeStack = [t.$ed[0]],\n                    node,\n                    foundStart = false,\n                    stop = false;\n\n                range = t.doc.createRange();\n\n                while (!stop && (node = nodeStack.pop())) {\n                    if (node.nodeType === 3) {\n                        var nextCharIndex = charIndex + node.length;\n                        if (!foundStart && metaRange.start >= charIndex && metaRange.start <= nextCharIndex) {\n                            range.setStart(node, metaRange.start - charIndex);\n                            foundStart = true;\n                        }\n                        if (foundStart && metaRange.end >= charIndex && metaRange.end <= nextCharIndex) {\n                            range.setEnd(node, metaRange.end - charIndex);\n                            stop = true;\n                        }\n                        charIndex = nextCharIndex;\n                    } else {\n                        var cn = node.childNodes,\n                            i = cn.length;\n\n                        while (i > 0) {\n                            i -= 1;\n                            nodeStack.push(cn[i]);\n                        }\n                    }\n                }\n            }\n\n            documentSelection.removeAllRanges();\n            documentSelection.addRange(range || savedRange);\n        },\n        getRangeText: function () {\n            return this.range + '';\n        },\n\n        updateButtonPaneStatus: function () {\n            var t = this,\n                prefix = t.o.prefix,\n                tags = t.getTagsRecursive(t.doc.getSelection().focusNode),\n                activeClasses = prefix + 'active-button ' + prefix + 'active';\n\n            $('.' + prefix + 'active-button', t.$btnPane).removeClass(activeClasses);\n            $.each(tags, function (i, tag) {\n                var btnName = t.tagToButton[tag.toLowerCase()],\n                    $btn = $('.' + prefix + btnName + '-button', t.$btnPane);\n\n                if ($btn.length > 0) {\n                    $btn.addClass(activeClasses);\n                } else {\n                    try {\n                        $btn = $('.' + prefix + 'dropdown .' + prefix + btnName + '-dropdown-button', t.$box);\n                        var dropdownBtnName = $btn.parent().data('dropdown');\n                        $('.' + prefix + dropdownBtnName + '-button', t.$box).addClass(activeClasses);\n                    } catch (e) {\n                    }\n                }\n            });\n        },\n        getTagsRecursive: function (element, tags) {\n            var t = this;\n            tags = tags || (element && element.tagName ? [element.tagName] : []);\n\n            if (element && element.parentNode) {\n                element = element.parentNode;\n            } else {\n                return tags;\n            }\n\n            var tag = element.tagName;\n            if (tag === 'DIV') {\n                return tags;\n            }\n            if (tag === 'P' && element.style.textAlign !== '') {\n                tags.push(element.style.textAlign);\n            }\n\n            $.each(t.tagHandlers, function (i, tagHandler) {\n                tags = tags.concat(tagHandler(element, t));\n            });\n\n            tags.push(tag);\n\n            return t.getTagsRecursive(element, tags).filter(function (tag) {\n                return tag != null;\n            });\n        },\n\n        // Plugins\n        initPlugins: function () {\n            var t = this;\n            t.loadedPlugins = [];\n            $.each($.trumbowyg.plugins, function (name, plugin) {\n                if (!plugin.shouldInit || plugin.shouldInit(t)) {\n                    plugin.init(t);\n                    if (plugin.tagHandler) {\n                        t.tagHandlers.push(plugin.tagHandler);\n                    }\n                    t.loadedPlugins.push(plugin);\n                }\n            });\n        },\n        destroyPlugins: function () {\n            $.each(this.loadedPlugins, function (i, plugin) {\n                if (plugin.destroy) {\n                    plugin.destroy();\n                }\n            });\n        }\n    };\n})(navigator, window, document, jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trumbowyg/dist/trumbowyg.js\n// module id = wc9L\n// module chunks = 1"],"sourceRoot":""}